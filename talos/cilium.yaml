---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9rckhaT3NvSVZjVFo0Mi9JNE9EUXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTBNekF4TUZvWERUSTJNRFF3TVRBMApNekF4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1RFlkbkJnbzFBbS8wU3pZS2dwUDRmOHNRYkk2WFpSZ1g5Q2J3WjJwTXF3Qk1iUFYKZm4yQTd2NTBkaGtvQmVGcVZrc1hQemdURmE1VDMvMkkrRTFJMTE0d3Q0OFFzcUJKWXdaR2p5WkRseU5ISWhJdwpNc1dId2U0ckREaFZxa3BuSEpzVUJjUnVVNEJVaSszcnNvUFRtNE5tKytMbElRUHJ4eUQ1TUFEY2R4TUpXdVBSCkxtemx4NERmUnlqcFFnNjJXcGNvV1JvRStQSFhnNVh4bnhtNHdtaE8rdThJbVAwN2d2RGppb1VLMGhHMytYYlIKSVNHRnNrWkpKRmRNK0FYbEhhNG5NM01SNVdTaFY3RkRNYitvN1ZlK0dSTHVRNmNBbmsxK2R0alg2VGhqbFZNMgpoRUNBN0JNNDgzN2Z2VU8wd0UwSDF0MVdiOElmaW9kUnU4bFVtd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUszZkhXZ3VoZEV0dFZVNnlqWXBFcUVJL3EvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0IzQjZQakJEZU9wT0NlZDJ4VElSWm1RL0d4UVRKc1A4QTZkanFSZTBxbXlzZEhEd1VRYnFvCjlnUE5SWFJaRUx5VUsvdFl2V3dISDhlK0krYVIveXFEYm1PMXpvUVFXWkI2alNOVkY3VVM0UVN3d29CNFEveWEKaW1NRUlzSktjUmtpVHhPYlZPYytZLzFwUmZSWEZqbDdyRmh1YlphS2xYQlB0VDY0STljMmV5YVVOQ250RDBEagpxY0RhTVRPYnpuTk1wME9WbHFZU3k2Y1N2eURZeVV6WGFLWUJMQUpEYUtXTzZRUk9tMkdGU0pqOGdIbFhlYnROCjduNW5yMVZBZmVObFdKZTRvbGpieG1KRzZ5aDduWnMzaDZPNU81WmtCRVdVNTRXcFlaVFZMRGwxaWdFZm1Gb2gKendkcHczcHpldFJpbnhyNzd3dTBQamxrUjJlMUZleWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdURZZG5CZ28xQW0vMFN6WUtncFA0ZjhzUWJJNlhaUmdYOUNid1oycE1xd0JNYlBWCmZuMkE3djUwZGhrb0JlRnFWa3NYUHpnVEZhNVQzLzJJK0UxSTExNHd0NDhRc3FCSll3WkdqeVpEbHlOSEloSXcKTXNXSHdlNHJERGhWcWtwbkhKc1VCY1J1VTRCVWkrM3Jzb1BUbTRObSsrTGxJUVByeHlENU1BRGNkeE1KV3VQUgpMbXpseDREZlJ5anBRZzYyV3Bjb1dSb0UrUEhYZzVYeG54bTR3bWhPK3U4SW1QMDdndkRqaW9VSzBoRzMrWGJSCklTR0Zza1pKSkZkTStBWGxIYTRuTTNNUjVXU2hWN0ZETWIrbzdWZStHUkx1UTZjQW5rMStkdGpYNlRoamxWTTIKaEVDQTdCTTQ4MzdmdlVPMHdFMEgxdDFXYjhJZmlvZFJ1OGxVbXdJREFRQUJBb0lCQUZpdVJLYm13cEVCZUlSOApzRHZjNXdRSFVnajJnajZXdGFhcXlMRDI4NE5mWnR2RWxWemxrbko3c1JsQmx4RHRxY0dOT00zSWN2ZVhDdTNrCklsSlc4bUFzQ2d2MEpiZTRqbHZMbzZBNmJZT1BDaW1PMUFFOU10UGJrb0c1aFJRTDZZUE43Rit5WnVKdi8wTzEKOENmcWFxNk5IY0RaUkRFV3NDVVc3Sjk5YXFVdmhUcnFNeXN5cEhVclNnamxCZHRqVTdpbWowUmtZd0tNMW92dApVOTdVdHpRQUtIbjVQcndDRXIrOC9WRjBGbC9OWHFyRllIR2dwb1F3cVJNZ2gxU0VweUVMVE0zNkt2aHp3NEhzCjBIQXI1VHM3Z05uVDBLNVFiaGNQRXIyT1F3SXV0by9oakwyR3VVdllkWi8zWmlZRGwvdkt3L0x5S1craXFrazEKSkFKQkJORUNnWUVBeVVxdWRtMXlTTUFCY3VCbDhrelJ2U1FFT0hYUWhUeFhaUVZKSk8ycGdDdVVldmovSGpKMwo2RTc4TG1ZK3QrMEdmTCtCeXNzQVRwbktoVlBVZXhCWFlDRUxxZTJzNlZSRVUxUlltZFhSY3ppUGhKamk2TmJPCktWTDV3Y0lGb2JFeTBMcDdic2I3VCtDTVJiWDhnSFdxQm1XT0NqSHJlcmhsblBBemszMnkxeFVDZ1lFQTZrY0kKTEt1c1FBc054SHlVZHZxZHlEQWM1TXZYRkNiL0pvNHNGY3pITkRmTTNNVU5HcnZ3aGIwM1dTZ1gyUDFDS1Bmdwp2ek0yeUFYZ1duSkxFb1JwOVVuY2ZYMUlhaVBiRHk0U2xjLzFvWVJxaGJLV1JXRW5XWXZHcnVRYkhVbm9Vd3BzClQ5NTZRRXVBTC9KUXozQUc0WFpMcEkzRkhTNjRFZ00yOWUwcWFPOENnWUJ1NmtmWDJkYnZYMTFzLzFrdGVrYlkKQWRDUmk5bXFrT1ZYTk9KcEJzd3ZZOVFkTHJiazNNcFZwN0F0b1FsT0w3MHpZQk1VdTJjZjZINC9tVUdyemdWWApZdDRhZEd5aTVWd0F6cWxEbXg0ZWJ6d2x4RmpFRkJqbGpHTXk4TVpKb21wdHVWUHFacHAwR1RjeDhtV0FJMVhjCjBIakVCVjNMOFcrTVdvOFE1bUoxUVFLQmdBeUxNeGZaTlViVWtLOGxrSGx5WDhKWk9TTFMremdjQW10WkQyazMKWnE4WUVjTDhWZ0JKY2M1blhEQk00a0gvQld6V0liRExHRExMaGNDeC8rMEU0L3Q3TWZBU0ppOXdyZ2o1Q1l1MQo3OHZ2SUJqNmYrdEZFV3RNL1oxZG4wb0pMQVJPT1pCcE5CaC9NbVRlejQ3Ynk3S0V0L1llbFNCRDRSMHR5T0tRCkNVWkhBb0dBQmg3VTkyajUzY3VtRzZFcFg5bGtudTJYdGRwOFA4eTJVakdGOUdPTU1sd2RrU1VhYnBwekxEOVoKQktXMktLWEExcnRCMXZMeEZiNXhSUVdnUjFBZE5DNUZJWlFWcU9mcmh2b1U3eVJXSDkrRGRKRVVkUnVPMjVmagp2TGJNR09NYi8zWi9OQ3g0UTRQclkwZFhPOUR4YVQzVDZFN2VmT1F4K1J1SFZCTkJBSVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9rckhaT3NvSVZjVFo0Mi9JNE9EUXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTBNekF4TUZvWERUSTJNRFF3TVRBMApNekF4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1RFlkbkJnbzFBbS8wU3pZS2dwUDRmOHNRYkk2WFpSZ1g5Q2J3WjJwTXF3Qk1iUFYKZm4yQTd2NTBkaGtvQmVGcVZrc1hQemdURmE1VDMvMkkrRTFJMTE0d3Q0OFFzcUJKWXdaR2p5WkRseU5ISWhJdwpNc1dId2U0ckREaFZxa3BuSEpzVUJjUnVVNEJVaSszcnNvUFRtNE5tKytMbElRUHJ4eUQ1TUFEY2R4TUpXdVBSCkxtemx4NERmUnlqcFFnNjJXcGNvV1JvRStQSFhnNVh4bnhtNHdtaE8rdThJbVAwN2d2RGppb1VLMGhHMytYYlIKSVNHRnNrWkpKRmRNK0FYbEhhNG5NM01SNVdTaFY3RkRNYitvN1ZlK0dSTHVRNmNBbmsxK2R0alg2VGhqbFZNMgpoRUNBN0JNNDgzN2Z2VU8wd0UwSDF0MVdiOElmaW9kUnU4bFVtd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUszZkhXZ3VoZEV0dFZVNnlqWXBFcUVJL3EvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0IzQjZQakJEZU9wT0NlZDJ4VElSWm1RL0d4UVRKc1A4QTZkanFSZTBxbXlzZEhEd1VRYnFvCjlnUE5SWFJaRUx5VUsvdFl2V3dISDhlK0krYVIveXFEYm1PMXpvUVFXWkI2alNOVkY3VVM0UVN3d29CNFEveWEKaW1NRUlzSktjUmtpVHhPYlZPYytZLzFwUmZSWEZqbDdyRmh1YlphS2xYQlB0VDY0STljMmV5YVVOQ250RDBEagpxY0RhTVRPYnpuTk1wME9WbHFZU3k2Y1N2eURZeVV6WGFLWUJMQUpEYUtXTzZRUk9tMkdGU0pqOGdIbFhlYnROCjduNW5yMVZBZmVObFdKZTRvbGpieG1KRzZ5aDduWnMzaDZPNU81WmtCRVdVNTRXcFlaVFZMRGwxaWdFZm1Gb2gKendkcHczcHpldFJpbnhyNzd3dTBQamxrUjJlMUZleWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdURZZG5CZ28xQW0vMFN6WUtncFA0ZjhzUWJJNlhaUmdYOUNid1oycE1xd0JNYlBWCmZuMkE3djUwZGhrb0JlRnFWa3NYUHpnVEZhNVQzLzJJK0UxSTExNHd0NDhRc3FCSll3WkdqeVpEbHlOSEloSXcKTXNXSHdlNHJERGhWcWtwbkhKc1VCY1J1VTRCVWkrM3Jzb1BUbTRObSsrTGxJUVByeHlENU1BRGNkeE1KV3VQUgpMbXpseDREZlJ5anBRZzYyV3Bjb1dSb0UrUEhYZzVYeG54bTR3bWhPK3U4SW1QMDdndkRqaW9VSzBoRzMrWGJSCklTR0Zza1pKSkZkTStBWGxIYTRuTTNNUjVXU2hWN0ZETWIrbzdWZStHUkx1UTZjQW5rMStkdGpYNlRoamxWTTIKaEVDQTdCTTQ4MzdmdlVPMHdFMEgxdDFXYjhJZmlvZFJ1OGxVbXdJREFRQUJBb0lCQUZpdVJLYm13cEVCZUlSOApzRHZjNXdRSFVnajJnajZXdGFhcXlMRDI4NE5mWnR2RWxWemxrbko3c1JsQmx4RHRxY0dOT00zSWN2ZVhDdTNrCklsSlc4bUFzQ2d2MEpiZTRqbHZMbzZBNmJZT1BDaW1PMUFFOU10UGJrb0c1aFJRTDZZUE43Rit5WnVKdi8wTzEKOENmcWFxNk5IY0RaUkRFV3NDVVc3Sjk5YXFVdmhUcnFNeXN5cEhVclNnamxCZHRqVTdpbWowUmtZd0tNMW92dApVOTdVdHpRQUtIbjVQcndDRXIrOC9WRjBGbC9OWHFyRllIR2dwb1F3cVJNZ2gxU0VweUVMVE0zNkt2aHp3NEhzCjBIQXI1VHM3Z05uVDBLNVFiaGNQRXIyT1F3SXV0by9oakwyR3VVdllkWi8zWmlZRGwvdkt3L0x5S1craXFrazEKSkFKQkJORUNnWUVBeVVxdWRtMXlTTUFCY3VCbDhrelJ2U1FFT0hYUWhUeFhaUVZKSk8ycGdDdVVldmovSGpKMwo2RTc4TG1ZK3QrMEdmTCtCeXNzQVRwbktoVlBVZXhCWFlDRUxxZTJzNlZSRVUxUlltZFhSY3ppUGhKamk2TmJPCktWTDV3Y0lGb2JFeTBMcDdic2I3VCtDTVJiWDhnSFdxQm1XT0NqSHJlcmhsblBBemszMnkxeFVDZ1lFQTZrY0kKTEt1c1FBc054SHlVZHZxZHlEQWM1TXZYRkNiL0pvNHNGY3pITkRmTTNNVU5HcnZ3aGIwM1dTZ1gyUDFDS1Bmdwp2ek0yeUFYZ1duSkxFb1JwOVVuY2ZYMUlhaVBiRHk0U2xjLzFvWVJxaGJLV1JXRW5XWXZHcnVRYkhVbm9Vd3BzClQ5NTZRRXVBTC9KUXozQUc0WFpMcEkzRkhTNjRFZ00yOWUwcWFPOENnWUJ1NmtmWDJkYnZYMTFzLzFrdGVrYlkKQWRDUmk5bXFrT1ZYTk9KcEJzd3ZZOVFkTHJiazNNcFZwN0F0b1FsT0w3MHpZQk1VdTJjZjZINC9tVUdyemdWWApZdDRhZEd5aTVWd0F6cWxEbXg0ZWJ6d2x4RmpFRkJqbGpHTXk4TVpKb21wdHVWUHFacHAwR1RjeDhtV0FJMVhjCjBIakVCVjNMOFcrTVdvOFE1bUoxUVFLQmdBeUxNeGZaTlViVWtLOGxrSGx5WDhKWk9TTFMremdjQW10WkQyazMKWnE4WUVjTDhWZ0JKY2M1blhEQk00a0gvQld6V0liRExHRExMaGNDeC8rMEU0L3Q3TWZBU0ppOXdyZ2o1Q1l1MQo3OHZ2SUJqNmYrdEZFV3RNL1oxZG4wb0pMQVJPT1pCcE5CaC9NbVRlejQ3Ynk3S0V0L1llbFNCRDRSMHR5T0tRCkNVWkhBb0dBQmg3VTkyajUzY3VtRzZFcFg5bGtudTJYdGRwOFA4eTJVakdGOUdPTU1sd2RrU1VhYnBwekxEOVoKQktXMktLWEExcnRCMXZMeEZiNXhSUVdnUjFBZE5DNUZJWlFWcU9mcmh2b1U3eVJXSDkrRGRKRVVkUnVPMjVmagp2TGJNR09NYi8zWi9OQ3g0UTRQclkwZFhPOUR4YVQzVDZFN2VmT1F4K1J1SFZCTkJBSVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9rckhaT3NvSVZjVFo0Mi9JNE9EUXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTBNekF4TUZvWERUSTJNRFF3TVRBMApNekF4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1RFlkbkJnbzFBbS8wU3pZS2dwUDRmOHNRYkk2WFpSZ1g5Q2J3WjJwTXF3Qk1iUFYKZm4yQTd2NTBkaGtvQmVGcVZrc1hQemdURmE1VDMvMkkrRTFJMTE0d3Q0OFFzcUJKWXdaR2p5WkRseU5ISWhJdwpNc1dId2U0ckREaFZxa3BuSEpzVUJjUnVVNEJVaSszcnNvUFRtNE5tKytMbElRUHJ4eUQ1TUFEY2R4TUpXdVBSCkxtemx4NERmUnlqcFFnNjJXcGNvV1JvRStQSFhnNVh4bnhtNHdtaE8rdThJbVAwN2d2RGppb1VLMGhHMytYYlIKSVNHRnNrWkpKRmRNK0FYbEhhNG5NM01SNVdTaFY3RkRNYitvN1ZlK0dSTHVRNmNBbmsxK2R0alg2VGhqbFZNMgpoRUNBN0JNNDgzN2Z2VU8wd0UwSDF0MVdiOElmaW9kUnU4bFVtd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUszZkhXZ3VoZEV0dFZVNnlqWXBFcUVJL3EvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0IzQjZQakJEZU9wT0NlZDJ4VElSWm1RL0d4UVRKc1A4QTZkanFSZTBxbXlzZEhEd1VRYnFvCjlnUE5SWFJaRUx5VUsvdFl2V3dISDhlK0krYVIveXFEYm1PMXpvUVFXWkI2alNOVkY3VVM0UVN3d29CNFEveWEKaW1NRUlzSktjUmtpVHhPYlZPYytZLzFwUmZSWEZqbDdyRmh1YlphS2xYQlB0VDY0STljMmV5YVVOQ250RDBEagpxY0RhTVRPYnpuTk1wME9WbHFZU3k2Y1N2eURZeVV6WGFLWUJMQUpEYUtXTzZRUk9tMkdGU0pqOGdIbFhlYnROCjduNW5yMVZBZmVObFdKZTRvbGpieG1KRzZ5aDduWnMzaDZPNU81WmtCRVdVNTRXcFlaVFZMRGwxaWdFZm1Gb2gKendkcHczcHpldFJpbnhyNzd3dTBQamxrUjJlMUZleWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtyRS9jWk9VVzQrSkNJT2E4ckI1akl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTBNekF4TUZvWERUSTJNRFF3TVRBMApNekF4TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTFhZWppSWNpUmtNbGs4OHBsejloWENpOExuYjAKRmJiMTZ2OVhZb3BhVG94aXQyck5lTVlnbFNHYmRMbEQwZ3BjdjBYbHhkbWlCUjRxdzNwaDZ1UE5IKzdIS3g5Zwp4eUlnbWVjc09vNVBGUldpMVAzelJDQ1p1NlZ3MXZrb1BMTVNBc0phNGNsbThxMEg0U3lzazcxZkFxOG1yOXJFCk1FTm1iRFMxaytHblQ1UitMWjcyT0NQWndYMmNHbVYreWdadFhPRG5mMFh4ZjUwZ1ZpYk14WUFxWnRLdHNSN0UKdnNrUWdva3pYT2xkWVJGWlpmQk9LODRhVVBWOGt1bWVNRkJqSDNKMW5qTU1USEwrUUUwd21SUVEvTUk3eTlDVApoVGkyQXowQ1IzRFJVNmYvSUJrMWlaQ3l2cW5XZUVMN3RCVU9qbDhheWdpOG5iNXgzVTJTaHFvaWR3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVEN0M3gxb0xvWFJMYlZWT3NvMktSSwpoQ1A2dnpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQlZHUjV5Z2ZzekpiZ296LzNvTWNHd0dWdVBEa1VCcVlFdFQ5NHJDZzZ2OVlXYkwKcFVpdFNEa0VEek1nMHdWZWd5OUFEV2grangzWjFiYmphZFZVVnNHSktpcjlEMXlHTjZNdnJXZ04vMjJRSzFnZQpnSlJ1TFZsSDZCcWx2VzRnOFY0ZEFCUFVBQklwZWtQT3VkR25Ld2tDMlRuaEp5bS9TS1R0ckVDVFdhRStyckNvCllDYlpQajBKTi9mamd4WjU1RjkrY3JiRkFLZEd4YnZMTXJqOXg2R1hLVHFqZU5ldXpZTWxqcHVlUlNzcnlWT1gKR1ZpMFZWeHNaRFl5b3RqTU81OVNiOHlKeFBpaVZHdTBhdzhnZkVZYVN4Y0gweWtvY2lRK0xtQ0NiU3kwRTU4NQpkb2JQVXgzM1JnUUM1T3RkZFVGU1pDT3cwUmtuQWQwUEtyTk1uOEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWFlamlJY2lSa01sazg4cGx6OWhYQ2k4TG5iMEZiYjE2djlYWW9wYVRveGl0MnJOCmVNWWdsU0diZExsRDBncGN2MFhseGRtaUJSNHF3M3BoNnVQTkgrN0hLeDlneHlJZ21lY3NPbzVQRlJXaTFQM3oKUkNDWnU2VncxdmtvUExNU0FzSmE0Y2xtOHEwSDRTeXNrNzFmQXE4bXI5ckVNRU5tYkRTMWsrR25UNVIrTFo3MgpPQ1Bad1gyY0dtVit5Z1p0WE9EbmYwWHhmNTBnVmliTXhZQXFadEt0c1I3RXZza1Fnb2t6WE9sZFlSRlpaZkJPCks4NGFVUFY4a3VtZU1GQmpIM0oxbmpNTVRITCtRRTB3bVJRUS9NSTd5OUNUaFRpMkF6MENSM0RSVTZmL0lCazEKaVpDeXZxbldlRUw3dEJVT2psOGF5Z2k4bmI1eDNVMlNocW9pZHdJREFRQUJBb0lCQUZXamZWUXpQbFRGZzJGcwp6ekgxMExPZERGamZpMVRNNG1PUWQ5bGl0WEg0cVhUMWxXaU1tZkRNNkwvdnByU2hQSzNhZVpCRmZNRHFaNSsxCkJWeWVkTkVRNTdwc09HRjVWM0g1REd4b01HQzJMRytOWHgzMnAwaGt0d2NrRmJIRzRUaEQ2U1BKazc5QUJnR0cKNDZIUWJTM3BRT3VLRjh0MHFMQkVyR2ViTW5JZHlyZmV6bjdxYm9mWWptWFY4T2M0eTB4MDJzRWR5ZzBQaEJlRQpqZzkzM2ZwQk41TlJ6VXlJR3h0cjBPZGFDYnpreHZUNVY1QmluV3gwYUt0YzBkUnNJcjJUNUtCbEdHYmlib2JkCnpwc3daUnpBMlJIZ201QXZKSUFjQUFGWm9yTjMxUWxPUE9SN055aEpDT3lvV2VUNEt4cGltdnhmZnNpanBwWWYKc2g5SG44a0NnWUVBN1dSWVZEcyt1RlN3NDZ6ZFAxQldXekFDa0lGVlZMVXdOWE82bEltc05sU3FjQlpNZXFVaAppQmN5M3FHWkFiR1FTOHRQSlA3dFVFdU5uMHRMWUM5eFFyZjJHTzFvOUJ4aDMxeWRTNS9YcWlsUUdGMjFuUG9jCnFJWWVzYmxOQ3h3RkZiM0QyT3h3TG0yeW1EdlNSQjVGTlhlVnBSQ05sODJqSnlqR0xiMnIycXNDZ1lFQTVtYjQKUE4rQSs3VTNZL0VadjR2K0VVazNWNEk4dGt1emtkVFNXdFJTMHM4V2cvcjBsa1ExVkxjV29lSkJ2VUdtVnhpUQp3NUs4Q0JraHc5akFJbk4xSFlXOUphTHNyc0RWMkhkOXdBZHgwcGFkckNqakxTLytYeHA0cVpoSnd0V3VUd3ZJClUxSEk2MjA4TUhNUFo1ZXB0RDhNT0xNUzI0Yll4SnlYYzV1bWwyVUNnWUFadWF3UXhMTFJTdXc0WC8xQjVUVFcKZ09kbVBYMi94anJKTUJkaURXRktLZmFtV3VSQ3ppNUtEeW1HRXNELysvd0ZHcTBpOXpWRVpFdWVuWXczaWl5ZAo3RTJRK2ZsTHF0KzRVdE1BNVB0OEJ5b1UyZUxhZGdneEF3ZkVmcTRvckFxcEJuMTR2bmFSc1hXUEpieHRnVkpDCnJ3amFjR2JIc3BNaHBUdUVyVzg0TFFLQmdRRFIybi9Ia2hzOUovVm5oalpaalB6QWFkdUtUUWxYVU9RaHM2SlYKTUlhdmxBZUI5cFhJT0NBTEpTZnNFdFNsdUtIMU9sN0FnMm5ZUm12R29pbCtONE00ZkpPbk1CbzdvVkFsZGRDSAprMEJNK3ZwcDBHUDZ5SGY3ejNTUHBER3EwRTJQbWIvQWhBRm96WG5BOTB2VW93TGpOWG5BT3ZxMkVNQm5jK2xPClZ6c0pNUUtCZ1FDd0F0OWhIWWtCemZTQ29wZjBqNlFHR2JoVXN6ZVorbW5LK3dWMWRuUEI5bWhYbGM2TGg2SnYKc1ZOZTE5ZEtOTXhrQ25qY0N4cWRvMWRzcWlwTG1ST1pZcnl5ZExScUlFbHN0TVMyRlhZTU82OWdMZStqc0dhNwpnSFRSMGU5VTdMd0Y1ZmtjQ3lZdHF0SHZrcTZLVGNpVWd2M2RlSldZWHNWL2xtSVU2VmZYY1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9rckhaT3NvSVZjVFo0Mi9JNE9EUXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTBNekF4TUZvWERUSTJNRFF3TVRBMApNekF4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1RFlkbkJnbzFBbS8wU3pZS2dwUDRmOHNRYkk2WFpSZ1g5Q2J3WjJwTXF3Qk1iUFYKZm4yQTd2NTBkaGtvQmVGcVZrc1hQemdURmE1VDMvMkkrRTFJMTE0d3Q0OFFzcUJKWXdaR2p5WkRseU5ISWhJdwpNc1dId2U0ckREaFZxa3BuSEpzVUJjUnVVNEJVaSszcnNvUFRtNE5tKytMbElRUHJ4eUQ1TUFEY2R4TUpXdVBSCkxtemx4NERmUnlqcFFnNjJXcGNvV1JvRStQSFhnNVh4bnhtNHdtaE8rdThJbVAwN2d2RGppb1VLMGhHMytYYlIKSVNHRnNrWkpKRmRNK0FYbEhhNG5NM01SNVdTaFY3RkRNYitvN1ZlK0dSTHVRNmNBbmsxK2R0alg2VGhqbFZNMgpoRUNBN0JNNDgzN2Z2VU8wd0UwSDF0MVdiOElmaW9kUnU4bFVtd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUszZkhXZ3VoZEV0dFZVNnlqWXBFcUVJL3EvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0IzQjZQakJEZU9wT0NlZDJ4VElSWm1RL0d4UVRKc1A4QTZkanFSZTBxbXlzZEhEd1VRYnFvCjlnUE5SWFJaRUx5VUsvdFl2V3dISDhlK0krYVIveXFEYm1PMXpvUVFXWkI2alNOVkY3VVM0UVN3d29CNFEveWEKaW1NRUlzSktjUmtpVHhPYlZPYytZLzFwUmZSWEZqbDdyRmh1YlphS2xYQlB0VDY0STljMmV5YVVOQ250RDBEagpxY0RhTVRPYnpuTk1wME9WbHFZU3k2Y1N2eURZeVV6WGFLWUJMQUpEYUtXTzZRUk9tMkdGU0pqOGdIbFhlYnROCjduNW5yMVZBZmVObFdKZTRvbGpieG1KRzZ5aDduWnMzaDZPNU81WmtCRVdVNTRXcFlaVFZMRGwxaWdFZm1Gb2gKendkcHczcHpldFJpbnhyNzd3dTBQamxrUjJlMUZleWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQVBHUkpOMkdmd21VL01kc0Y1c1NlclF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTBNekF4TUZvWERUSTJNRFF3TVRBMApNekF4TUZvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxc2l2MEFqMk13cDcKNEI4TW1aU2ZxRU9TUGxzVGEyQ1lwcy96OHZYSGR4dys3MlIwazdYQlEwVHc3N0hVWmRtUkJFRXBuZlZVMGhzZApSNXBUUi9IRGRkcEZ4NVFuTUxyQ25RcVhFVGl1b292MEZFcjZpTStvbWVvZURIMTBKUmtmSkd0c0xFdkdPNnFPCnZMUVpRektnL24ySC8xZGd0alRYYkVrQjdFcDh1WEtuNjVXV2dPTGVscnZ2VHk4MjBIYnQxTUt1bWFVYWJNRDcKM1BUR1YrTlU4N1gvL3REZXdnUi92eVFOSlM3dXNiQmV0REhpV00yRnJCMlRkMW1CSm5JTDBpZjBQU0RQb1RnMApOMU9JYXp0YnFvRFZOT2ZweUUwYkhtcUJMTHJyZVFLTURaZTdrREFKVitqdS9RUjlBUDB3NkNCOXZ6V2o3QUoyCklRSFBwazdNYVFJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRDdDN4MQpvTG9YUkxiVlZPc28yS1JLaENQNnZ6QXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKS09Rc1oxMzlUWHF5ankKdWh3VnZjQUFYb2tITWY2NXUzd2NMMXV0N252Wm1DMHloaFZLSDBROEMreVdHQ2I3YXk0NlRINzVoT0xPdmt4egpld3ZVUjJxQXQwaGpINUdlUW5qYnRiZzFnL01CdEtGNUlhOERkdWx4cVAwdDhRS1F3cXZPWERHZGVycDRwV1hECitzTzRONFhFMmZBL2JEcHBkaUJzazJWaWQ4andoWTB3Q2lRSTY3NUh3MlJiQVp4eTlCWUpWalUrckErekNTVUMKYmNlMVFaMmdEeDFIWmtDN0ZNdi9HSVlwZlE2WWV6RHRWTEI2MWhNSGNaaVJvcGtEMFN6ZW9sMHVLSnJTV0JVbApxTWNmYkFEY3BVdTAwNzlZZlllRHoxeC91VFJIYVUyeTJja0xXbTZvVzVMbkk1ZFdLRG1HZmZkRWZKWXdva1RtCmZJU0lxM0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXNpdjBBajJNd3A3NEI4TW1aU2ZxRU9TUGxzVGEyQ1lwcy96OHZYSGR4dys3MlIwCms3WEJRMFR3NzdIVVpkbVJCRUVwbmZWVTBoc2RSNXBUUi9IRGRkcEZ4NVFuTUxyQ25RcVhFVGl1b292MEZFcjYKaU0rb21lb2VESDEwSlJrZkpHdHNMRXZHTzZxT3ZMUVpRektnL24ySC8xZGd0alRYYkVrQjdFcDh1WEtuNjVXVwpnT0xlbHJ2dlR5ODIwSGJ0MU1LdW1hVWFiTUQ3M1BUR1YrTlU4N1gvL3REZXdnUi92eVFOSlM3dXNiQmV0REhpCldNMkZyQjJUZDFtQkpuSUwwaWYwUFNEUG9UZzBOMU9JYXp0YnFvRFZOT2ZweUUwYkhtcUJMTHJyZVFLTURaZTcKa0RBSlYranUvUVI5QVAwdzZDQjl2eldqN0FKMklRSFBwazdNYVFJREFRQUJBb0lCQUZ4cjRva0ljSVBLcHFMdwo2cGFxVVlSem5NN1Y1cnB6T2VqOEhKNWMxNmJqeUVNdzc4Mkh6S0NrekdaS3JCQzZIcnBZc1Ria0x4VE15NW1XCk1IOThuRFJJL1A0MmRNYndLcVZsdDc4QUY3R3JYMWtrQWxUTFhBaC9JK2ZLZEhJbkdDMVRYT1RUMU9FeE9iRngKSFVLNlFWbTNnVU56ZThqZTY3MlQvTkJzdHZaNzdYL0xOTGZxZVI2T2NQQlRXMTcrL2Y3UDBFaGxJNkxVbk8xZgpDODJORWl2ekN6c2tTOUtOWlNmWnhSU1krN0Mya0NyWHlOMkJ5UG9jQWU5TGxUSGF5NEk3bHF5Y1Y1WFJZZ21BCkYyZEt5Rk5lbkZVOXN5VmJQUm5DYk1JZTVKR1BUY0RUTUFxL0dOV3hZZ1p3VHd4ZmpQRVhjY1BpbUhnSC9XVmQKU3BHYW55a0NnWUVBMUtKNEt0bWc1cW5MMnl6NlBraXQvdzZ4cFJmcHBqb0ErL3JpUFdtSXJLM0hiTVNMS3pKUQpSN0p6bzZ6bG9qTCt2NzNGOE1JUGhmWmhNSjhQWlhERjI4VmVvM2tiY1BDcm80TWZGRDFjbFJ5QlNqQzcxMnpGCkYvaTJJVzhaOXAxcHI1UnIycjEwdkF5TzNCUU5Yb3FYUGNLY0pYdDkwY1VHdHhwYXRVUks3dXNDZ1lFQXpaMDMKVU03Y3lueWorVXAzd1hCUENoTURoRTBMTDRvRUdQendURHg5NmJTeGdETDhQZ090U3FZbng1QThYSnVxY0pHRApCNURyYlRYaFh5c3NFQWppUlZuQXpsRTY2Ylh0Um9ZRnBRV1haNjJGUFlYaDg5L3dWekJHZ25FYXBtaEh4dktoCjFOc2NaMmR0MHlrTHdKUHg5V1RjWm9EczlXYSsxK1BiTE8xWXBQc0NnWUFvbWdWY0dVWXlCVVlaeWRMV3hjWUQKcCtpZjM1c0wxSk9QaWU1ZFQ2TjdaWXRvNTNhemZ0MzVjc2ZGL3lPeC93N0p5aERiMGhKb3dBejYzY1J3MkVIUApuelpjL0trU3ZjSG9iUWNvTkRkVGVhZnVaTFBaaExsMXhGWHl1R1k2d3dBRk9OQUhhcG01dHFRb3ZlTjNvL3NSCkhmSDI3a2V1SUhNUno0UjJqRjNLbFFLQmdBbkFQdk5TSEI1dU1zaUx3NG9rN1ZxbzlDMitDWjNEaWRZMWlKL1UKN3BPNndnQTJhc2YySEszQm0zbFhXY1Y2akdheVAraUg4dUpHLzkwbml2dG5zSE5oZ2tkR2l1aXlmQUl3TU94VwppNHViS3dwejR2ZFIwM0FQRmdqeG5EWHdGQmRYUWwxNTFxc0F1TENlN2JQQVVHVTIxMHoxS0VlckM3bnBVR2VkCkNlc3BBb0dBVVQ4RVZwVjVxNmtUVzA1Y2dldWZ1Vm5wZERiSytIWUl2ZHlOMTdoQVlFcUwyK05qZnp4Q0l4OUMKTXM2Tm5ndTRFV1djSnNaT3RiOHFLRWVrOXRER0oxUko5b2NMVnVKaDQ1aHpUc1Z1eU9UWXdjTkE1eS9UZWVLMgozMExsQkVQUVNhb3Rka1dSM3VqSTNCQWFqN3M5TEJjRXpSc3BiMEtFMTVFbnFGUmZWaGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: home-cluster
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.244.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: home-cluster
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: metrics
    port: 9963
    protocol: TCP
    targetPort: prometheus
  selector:
    io.cilium/app: operator
    name: cilium-operator
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.1@sha256:f47ba86042e11b11b1a1e3c8c34768a171c6d8316a3856253f4ad4a92615d555"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "b0d2234857ce90387e77c2bfed3154d6366fbb66fe17de3f45d559cc62b318f3"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.1@sha256:ad7ce650c7877f8d769264e20bf5b9020ea778a9530cfae9d67a5c9d942c04cb"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/hubble-ui/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
  annotations:
    ingress.home.arpa/type: internal
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
spec:
  rules:
    - host: hubble.strallow.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hubble-ui
                port:
                  name: http
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
---
# Source: cilium/templates/cilium-operator/servicemonitor.yaml
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: cilium-operator
#   namespace: kube-system
#   labels:
#     app.kubernetes.io/part-of: cilium
#     app.kubernetes.io/name: cilium-operator
#   annotations:
# spec:
#   selector:
#     matchLabels:
#       io.cilium/app: operator
#       name: cilium-operator
#   namespaceSelector:
#     matchNames:
#     - kube-system
#   endpoints:
#   - port: metrics
#     interval: "10s"
#     honorLabels: true
#     path: /metrics
#   targetLabels:
#   - io.cilium/app
