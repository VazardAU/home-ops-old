---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWVRHNHlEQS9TbndEc2EvVnZ4NjlXekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRBeU1EWXlNRE0yV2hjTk1qWXdOREF4TURZeQpNRE0yV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRERJSmIrdmZIeVQrZkEzVmhxU2VEUEJuUEYxaHB6L2lFWWZ1bUJzNkh1WXViQmxZM1kKUXovTmFSY1VHUE9iVFpqbndybjRkeE1samV1NmxPNWh5TVFzQ1BOMURqQWpBbkhMaE9QNnA0V0NxZnZ3d1ZmaApJZkVucnc0Z3NES2duMWdEcTIyaFRWWi94WDNuT2pwb1JBWWdQcHdOaTMrRWxXcWcvblJaUGpHUVlvNUhvVjlKCkVxQlNXUUFMeEM5QWdDUHQvWjdpOTEyU0NGVVVNSksxOWNnYk5sSVdKbDlTR2hQS3NuVlpRZWpWaGJwNkJVNUgKdWtQYUJGaytnenF0WDRYaXhuTVlid2xSNVB4c1N6YnpvQ2YvRTU1RjVxNldQVFJNcktvdVp2Wlc0WllaRStYSQpmSmR6Wit0czhzWWNWOENUVHlxK2QwL1VGMWtDdVpNN0xuSDdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxMkdtbHd1V1kwRFhwcVpXOGhQUzY4TVJkRU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKZDNOQU5nYU9HQXpGcWdJTEhUM3JpQnJNNy83dHVLb3p0YWc4aHBlU0lMUGVsWG1FL2RFaFdRCi9iOUhoM0N3RDZRQnVZRHNtYkthRXBGQUFOdVAyQzBhUzN2aHZmOExhWjVRditpNks4RGNPc05ERmhzalJXOXQKMnJqalgyMWt6dEtWY1dYSnBZRjU1bVJNSTVoOTc4ZDZVbk5nM0p1Mzd5Yk5td3NBMlBOdFhlaC8xcDZkdzUyUwphdTBhV29oVnltVUFYZjVqZ05memtoRTZUeTUrWHJva28vaEd6UE9kTmI2WjB4L3RMUmg1QnBhZVJLWDZqKzYwCjdQdm5uYjlhWFlJNnVVVjdmNnZOdmV3KzZaRWVlNEdKSHN3ZEtuYlN4eXBJcVdaT1FnbnViaHZYSHpQZnNDVksKU1VxU2kxRWowSzZkd2ltNWQwcWpvaVNpVFFKclJtST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3lDVy9yM3g4ay9ud04xWWFrbmd6d1p6eGRZYWMvNGhHSDdwZ2JPaDdtTG13WldOCjJFTS96V2tYRkJqem0wMlk1OEs1K0hjVEpZM3J1cFR1WWNqRUxBanpkUTR3SXdKeHk0VGorcWVGZ3FuNzhNRlgKNFNIeEo2OE9JTEF5b0o5WUE2dHRvVTFXZjhWOTV6bzZhRVFHSUQ2Y0RZdC9oSlZxb1A1MFdUNHhrR0tPUjZGZgpTUktnVWxrQUM4UXZRSUFqN2YyZTR2ZGRrZ2hWRkRDU3RmWElHelpTRmlaZlVob1R5ckoxV1VIbzFZVzZlZ1ZPClI3cEQyZ1JaUG9NNnJWK0Y0c1p6R0c4SlVlVDhiRXMyODZBbi94T2VSZWF1bGowMFRLeXFMbWIyVnVHV0dSUGwKeUh5WGMyZnJiUExHSEZmQWswOHF2bmRQMUJkWkFybVRPeTV4K3dJREFRQUJBb0lCQUgwNlVTMjBJYTd0Y1VMcAp5M0NMY1dmc01DanJ1NVp0cGpmZVcyWU9Md0tiSHBWbXNkMzFhdUVkYk41TkZTcTZwa00zU2JzWVVJVnRpN2YzCkZQWlVydkhEM050bSs2VzhUK1BacWFhWUZLdERCSm9DdTYrVTVQd2U4T1l4cm93L04zRkRkOXhwa2ZYMmZWTUUKbjYrQzJKdWhFdTN1ZFN4VjZGVGllVEU5SlBvUDVtblFKeHBiTHBtY2g4ZGVQR2p5Qit6R1h1cXNCeTd5OEVLMApneU1hNEVucGtkSkljTkF3U0hnT1lUdzQ4dHVXSHplVTY1TkFkaWpOalN0QXgxR2FZQ01TamVYZEJBbkEyTnpTCmxlS05JR3dxNzY3b0s4ZTBwSEVYSmMwRno5cUx0Y0ZBZUJzTjJQTmRoT0ozcUVTeWxyMTV6U2NibFI2ZnlBVk8KSUdaYmNRRUNnWUVBODN2d3haRDBMUmxISVBwaGlweWcyMDhyZzJka1JDa2VNRHpQcnlHUVNtTXNKTXZvcHNvNgpyYlIveU1EL1hCRUlLMDBBdGFUYzlFV1JyeEZGektDN045V2FwSk1yR0dobmV1UTRSYWlicngvd2J5NHF2MDA3ClNzSmx2dUNHQURsOTZ5OVk5NE92a252b2hwY0VvMFdIYVMzd0tjb2pFMXlRWkVsZjFrZEhEdUVDZ1lFQXpTaFAKdUxKVndqN3JEaHIzSi9mbWZCNnNRRDAweFZsRmZ0MEw0cUhyc04yTHY3VnlwNmV2dVplT1lOekJ2V2h1Znd4ZQpjRkZnckpsUm82dmdmQ0dlTHZQYjY4ZzVWc0oxUEpqc3hvNy9mTWlTaTFSQ2RJNlAyWHhIeldmMHMyZHora3pPCk9wOEtUSGJRSmd3R0xHZXVOaU9DN0RTNFh1RURmcS9xWGtxNUtGc0NnWUJGRFE4NVdHU0hMYllJV2ptemI3d0cKdGlzbTl2bHVneUsybDJobXlHUDlWS2ErUUwzWUgxNEl5VG04RzAvUU1seFl1MXZLSjlrcHhWa05oeDUrYTg3cwpoTDE0a3V3VDNmZ0syQkpGWHczWDJuejdhdUpnb215QVJTVkp2cThCL1V3Q21Nam9XUVkveXJnbEEwc2phcUorClo3TEdoemJ2Vkw3MlVnREY2aXp5d1FLQmdBTjdJNThtcDMzY1EzREIxRi9CUFEvdUZVNGh1N3Q5Z0VoZXg4elkKb244bHd6RkZpdVI5VytYeVJHQXdYcmt3QkcvemJjYktHckhUQ0NlV3l3QlFNYmJxUEZrTDFLMDhMM0VQeHpTMwpTRzU5bUw3MGR3d3pQdzJacGo0OS9WRHQrSEhPeTlFQzBkSHFVaTNURm1lNmVxSkFpQUFxQk5iWFNvL2p2RDVOClZrYnhBb0dCQUl4MTBneGg2ajRFSXpkSHJqSWd4VGhxNHQ0UlFvVkhmd1h1TzhEckpCM2ZDSXNuRGJjQi9sRTkKc1MwYURWYWtnbUROdHNUU2kxMWx1U0NyYmtTVVdhVG5lS1hLcUcrUkY5a0Y0TkRHdDk5OXltbGlUZUt4blZobApGQ3lPZEl2QkdncjhoRk4rMHNKbGszVHZ0OFZ6Ums1OEVuTENiaDFFT3VZSGxiVm9sUWtLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWVRHNHlEQS9TbndEc2EvVnZ4NjlXekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRBeU1EWXlNRE0yV2hjTk1qWXdOREF4TURZeQpNRE0yV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRERJSmIrdmZIeVQrZkEzVmhxU2VEUEJuUEYxaHB6L2lFWWZ1bUJzNkh1WXViQmxZM1kKUXovTmFSY1VHUE9iVFpqbndybjRkeE1samV1NmxPNWh5TVFzQ1BOMURqQWpBbkhMaE9QNnA0V0NxZnZ3d1ZmaApJZkVucnc0Z3NES2duMWdEcTIyaFRWWi94WDNuT2pwb1JBWWdQcHdOaTMrRWxXcWcvblJaUGpHUVlvNUhvVjlKCkVxQlNXUUFMeEM5QWdDUHQvWjdpOTEyU0NGVVVNSksxOWNnYk5sSVdKbDlTR2hQS3NuVlpRZWpWaGJwNkJVNUgKdWtQYUJGaytnenF0WDRYaXhuTVlid2xSNVB4c1N6YnpvQ2YvRTU1RjVxNldQVFJNcktvdVp2Wlc0WllaRStYSQpmSmR6Wit0czhzWWNWOENUVHlxK2QwL1VGMWtDdVpNN0xuSDdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxMkdtbHd1V1kwRFhwcVpXOGhQUzY4TVJkRU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKZDNOQU5nYU9HQXpGcWdJTEhUM3JpQnJNNy83dHVLb3p0YWc4aHBlU0lMUGVsWG1FL2RFaFdRCi9iOUhoM0N3RDZRQnVZRHNtYkthRXBGQUFOdVAyQzBhUzN2aHZmOExhWjVRditpNks4RGNPc05ERmhzalJXOXQKMnJqalgyMWt6dEtWY1dYSnBZRjU1bVJNSTVoOTc4ZDZVbk5nM0p1Mzd5Yk5td3NBMlBOdFhlaC8xcDZkdzUyUwphdTBhV29oVnltVUFYZjVqZ05memtoRTZUeTUrWHJva28vaEd6UE9kTmI2WjB4L3RMUmg1QnBhZVJLWDZqKzYwCjdQdm5uYjlhWFlJNnVVVjdmNnZOdmV3KzZaRWVlNEdKSHN3ZEtuYlN4eXBJcVdaT1FnbnViaHZYSHpQZnNDVksKU1VxU2kxRWowSzZkd2ltNWQwcWpvaVNpVFFKclJtST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3lDVy9yM3g4ay9ud04xWWFrbmd6d1p6eGRZYWMvNGhHSDdwZ2JPaDdtTG13WldOCjJFTS96V2tYRkJqem0wMlk1OEs1K0hjVEpZM3J1cFR1WWNqRUxBanpkUTR3SXdKeHk0VGorcWVGZ3FuNzhNRlgKNFNIeEo2OE9JTEF5b0o5WUE2dHRvVTFXZjhWOTV6bzZhRVFHSUQ2Y0RZdC9oSlZxb1A1MFdUNHhrR0tPUjZGZgpTUktnVWxrQUM4UXZRSUFqN2YyZTR2ZGRrZ2hWRkRDU3RmWElHelpTRmlaZlVob1R5ckoxV1VIbzFZVzZlZ1ZPClI3cEQyZ1JaUG9NNnJWK0Y0c1p6R0c4SlVlVDhiRXMyODZBbi94T2VSZWF1bGowMFRLeXFMbWIyVnVHV0dSUGwKeUh5WGMyZnJiUExHSEZmQWswOHF2bmRQMUJkWkFybVRPeTV4K3dJREFRQUJBb0lCQUgwNlVTMjBJYTd0Y1VMcAp5M0NMY1dmc01DanJ1NVp0cGpmZVcyWU9Md0tiSHBWbXNkMzFhdUVkYk41TkZTcTZwa00zU2JzWVVJVnRpN2YzCkZQWlVydkhEM050bSs2VzhUK1BacWFhWUZLdERCSm9DdTYrVTVQd2U4T1l4cm93L04zRkRkOXhwa2ZYMmZWTUUKbjYrQzJKdWhFdTN1ZFN4VjZGVGllVEU5SlBvUDVtblFKeHBiTHBtY2g4ZGVQR2p5Qit6R1h1cXNCeTd5OEVLMApneU1hNEVucGtkSkljTkF3U0hnT1lUdzQ4dHVXSHplVTY1TkFkaWpOalN0QXgxR2FZQ01TamVYZEJBbkEyTnpTCmxlS05JR3dxNzY3b0s4ZTBwSEVYSmMwRno5cUx0Y0ZBZUJzTjJQTmRoT0ozcUVTeWxyMTV6U2NibFI2ZnlBVk8KSUdaYmNRRUNnWUVBODN2d3haRDBMUmxISVBwaGlweWcyMDhyZzJka1JDa2VNRHpQcnlHUVNtTXNKTXZvcHNvNgpyYlIveU1EL1hCRUlLMDBBdGFUYzlFV1JyeEZGektDN045V2FwSk1yR0dobmV1UTRSYWlicngvd2J5NHF2MDA3ClNzSmx2dUNHQURsOTZ5OVk5NE92a252b2hwY0VvMFdIYVMzd0tjb2pFMXlRWkVsZjFrZEhEdUVDZ1lFQXpTaFAKdUxKVndqN3JEaHIzSi9mbWZCNnNRRDAweFZsRmZ0MEw0cUhyc04yTHY3VnlwNmV2dVplT1lOekJ2V2h1Znd4ZQpjRkZnckpsUm82dmdmQ0dlTHZQYjY4ZzVWc0oxUEpqc3hvNy9mTWlTaTFSQ2RJNlAyWHhIeldmMHMyZHora3pPCk9wOEtUSGJRSmd3R0xHZXVOaU9DN0RTNFh1RURmcS9xWGtxNUtGc0NnWUJGRFE4NVdHU0hMYllJV2ptemI3d0cKdGlzbTl2bHVneUsybDJobXlHUDlWS2ErUUwzWUgxNEl5VG04RzAvUU1seFl1MXZLSjlrcHhWa05oeDUrYTg3cwpoTDE0a3V3VDNmZ0syQkpGWHczWDJuejdhdUpnb215QVJTVkp2cThCL1V3Q21Nam9XUVkveXJnbEEwc2phcUorClo3TEdoemJ2Vkw3MlVnREY2aXp5d1FLQmdBTjdJNThtcDMzY1EzREIxRi9CUFEvdUZVNGh1N3Q5Z0VoZXg4elkKb244bHd6RkZpdVI5VytYeVJHQXdYcmt3QkcvemJjYktHckhUQ0NlV3l3QlFNYmJxUEZrTDFLMDhMM0VQeHpTMwpTRzU5bUw3MGR3d3pQdzJacGo0OS9WRHQrSEhPeTlFQzBkSHFVaTNURm1lNmVxSkFpQUFxQk5iWFNvL2p2RDVOClZrYnhBb0dCQUl4MTBneGg2ajRFSXpkSHJqSWd4VGhxNHQ0UlFvVkhmd1h1TzhEckpCM2ZDSXNuRGJjQi9sRTkKc1MwYURWYWtnbUROdHNUU2kxMWx1U0NyYmtTVVdhVG5lS1hLcUcrUkY5a0Y0TkRHdDk5OXltbGlUZUt4blZobApGQ3lPZEl2QkdncjhoRk4rMHNKbGszVHZ0OFZ6Ums1OEVuTENiaDFFT3VZSGxiVm9sUWtLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWVRHNHlEQS9TbndEc2EvVnZ4NjlXekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRBeU1EWXlNRE0yV2hjTk1qWXdOREF4TURZeQpNRE0yV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRERJSmIrdmZIeVQrZkEzVmhxU2VEUEJuUEYxaHB6L2lFWWZ1bUJzNkh1WXViQmxZM1kKUXovTmFSY1VHUE9iVFpqbndybjRkeE1samV1NmxPNWh5TVFzQ1BOMURqQWpBbkhMaE9QNnA0V0NxZnZ3d1ZmaApJZkVucnc0Z3NES2duMWdEcTIyaFRWWi94WDNuT2pwb1JBWWdQcHdOaTMrRWxXcWcvblJaUGpHUVlvNUhvVjlKCkVxQlNXUUFMeEM5QWdDUHQvWjdpOTEyU0NGVVVNSksxOWNnYk5sSVdKbDlTR2hQS3NuVlpRZWpWaGJwNkJVNUgKdWtQYUJGaytnenF0WDRYaXhuTVlid2xSNVB4c1N6YnpvQ2YvRTU1RjVxNldQVFJNcktvdVp2Wlc0WllaRStYSQpmSmR6Wit0czhzWWNWOENUVHlxK2QwL1VGMWtDdVpNN0xuSDdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxMkdtbHd1V1kwRFhwcVpXOGhQUzY4TVJkRU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKZDNOQU5nYU9HQXpGcWdJTEhUM3JpQnJNNy83dHVLb3p0YWc4aHBlU0lMUGVsWG1FL2RFaFdRCi9iOUhoM0N3RDZRQnVZRHNtYkthRXBGQUFOdVAyQzBhUzN2aHZmOExhWjVRditpNks4RGNPc05ERmhzalJXOXQKMnJqalgyMWt6dEtWY1dYSnBZRjU1bVJNSTVoOTc4ZDZVbk5nM0p1Mzd5Yk5td3NBMlBOdFhlaC8xcDZkdzUyUwphdTBhV29oVnltVUFYZjVqZ05memtoRTZUeTUrWHJva28vaEd6UE9kTmI2WjB4L3RMUmg1QnBhZVJLWDZqKzYwCjdQdm5uYjlhWFlJNnVVVjdmNnZOdmV3KzZaRWVlNEdKSHN3ZEtuYlN4eXBJcVdaT1FnbnViaHZYSHpQZnNDVksKU1VxU2kxRWowSzZkd2ltNWQwcWpvaVNpVFFKclJtST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRU0tUbmdQNStwOCs0UUgzaVVWTzVUekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRBeU1EWXlNRE0yV2hjTk1qWXdOREF4TURZeQpNRE0yV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNllCUDhzemU3Rm96UVJVS3lHM0tubVdwNXNsM08KUzNNalN5a2VuSDY0S3VhcHRIY1hxUWoyTHlyUUZTR1d1cTJMUm1YOFBvREpUKzQ4c0kwRWpuOHFRYmQ1T1ZLZApnR2s3RGhpVktzVjZaN25GNUZPeGJ2cDhqVkF0aE9xRlpwT3c1T3ozOUFYNm5SaVoxTFJUN1NCR1JuS0pXeHl4Ci9yTkUrdlltbHhsbzF0d1ZSNUZKd0FuVUhMeThTOFJRNkJLclFwRTc4UDlUc1p2S1E2ZkxiRms4ZkFCbXpMb0cKOHYydW5qOWdlckhMbHVEczVpQzVva1ZWc2xwVDk3QkdOWmRPa2w0WkREN2QvUXR1U2Z4QkRyQ3ZDR2dBem9pMwplSEZKRHNTcW12L2YyMkRZREJhSWp3Qm1MYklIS3hRRi9UVTBSNnRlLys2UEJFSE0xQWxBWEVaN0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOZGhwcGNMbG1OQTE2YW1WdklUMHV2RApFWFJETUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFiQ1BqVW9KTFJNSytpbHAyOXZsNUpZRStqMEdZSXZnV09FNGZTREdUNU1lMEVSTzQKYS9XMDFyQlZyL0F3eWtjZ20xeE1URlVxOHcwUHQvMFdLN1BZZVN0clIxdVZ1YVNQNWptaHQxQUFHUTBoYkkxRgppT2poM0U0NmpDbndFM1VpRmNNZmFTTlFuSEJxeEZUY1lNN3hyajFWZXJwcjFKS1pHSjNXOFp2K0RlWmNPTHNJCnIvQzFVcTV5dS9kM3lobkxUb0IrYzYvbTRrQjlsak1YbEpSTE5scFVaRTlIZDY3RnI1bzRibzRJaFFobnJwUFMKSlI4M2N1c0ZpRmNpY0xWUElqeFlNWHVqclplYndLRVpDTitUSDJaVkc2ZDhWQ1pST3ZDcXdOeUF3ME1tZllFUQpsYmV4RjB5eEtkR2xJT242bFh3U1k2NTFYSWZuOHM3YlRyTVpxUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdW1BVC9MTTN1eGFNMEVWQ3NodHlwNWxxZWJKZHprdHpJMHNwSHB4K3VDcm1xYlIzCkY2a0k5aThxMEJVaGxycXRpMFpsL0Q2QXlVL3VQTENOQkk1L0trRzNlVGxTbllCcE93NFlsU3JGZW1lNXhlUlQKc1c3NmZJMVFMWVRxaFdhVHNPVHM5L1FGK3AwWW1kUzBVKzBnUmtaeWlWc2NzZjZ6UlByMkpwY1phTmJjRlVlUgpTY0FKMUJ5OHZFdkVVT2dTcTBLUk8vRC9VN0dieWtPbnkyeFpQSHdBWnN5NkJ2TDlycDQvWUhxeHk1Ymc3T1lnCnVhSkZWYkphVS9ld1JqV1hUcEplR1F3KzNmMExia244UVE2d3J3aG9BTTZJdDNoeFNRN0VxcHIvMzl0ZzJBd1cKaUk4QVppMnlCeXNVQmYwMU5FZXJYdi91andSQnpOUUpRRnhHZXdJREFRQUJBb0lCQVFDY0FOb2FGc1dhZzVpZwpxS2pZUHVOczZKellldlhNUFJtR1BGNlI4ZnFjRzhUeDNrNGxidWRDY2w3S3lEVlNYclh2TTZFZ1VBMHE5UTM4Cm5PZWRIYzNSeUNwVWZTZnJFRmFGQ1JxSW1jR3M0Ty8rZGsyYjRzSW15WDZJYTQ2RzFVTGd1ZTZrNmd5ckp4NDEKZlhib0hUOTdzM0lpQ1RMdXhyeTJDNzlJdEFlZjJYTllEMnRWUk1aRHNzRW8yTXBXQjlDbnRRbDVnT0h5aFhjLwpqTXdBWDk3MzdQS3FkeXVNWUNKOGc5ZWFiWFNDYjBObFdOeThQVnRjN0N3RkpVSTdqL3lOSnEzWG1ZR2hTeXRCCjEyQXYyaHJDOXBhZ1VoQkhBMmdHQVRSWUJ6MW5ocGc5N1dpbTRGVFpGOHR4cElDbCsveXVCTlZXcy9SRElYWTcKcmdlRmN5ZVpBb0dCQU5EQ1lNYVYwVWM3QWlnWUFmczVJQkFaVk52N0MyRnBGcVFKRVQ2by9DT0U3Rmx3NG5iZAovZmx3NFJTWnZnVEh1ZmYwbWh2dHI5bHYzUlR4N0FjTGFiSGV0TXZTKzByZVpscEVNT0dTTzlvSFZEc0QrVkM4CmkwY041b01aNEdQamF4ZlljVUp2cld2emU4TGM5cUJCTXJvb0kwTUZ3YXh5YVlRUFg5eTlZUUYxQW9HQkFPU00KK1l1Y1hyNXpyQnlXc0pQZGwzMzJ3MDVFUjFOZnFaSW0wK0FNenhGY0ljZ2t0ODB0Mjh4cElOQnJOKy9uTWxNMgpuVlNmMks2UzhPaEpNdWZ6WHphaTlJcHlSYVM5amxyVGdBNUNWekpYVE1yRGlEMHdGZ2EzT3F0UTNOc21rdldzCkp2ZFdyODV0OWNWd0k5WmxqaGhyKyt3cFByclFvd3FmZUJ0Z3hyb3ZBb0dCQUpOMXlsQmNRWEQwVUtpcmxMSzEKZmwyQTF6MXdUbkNuZjdPdEovNC85YUxOWVBvb3ovOHcvaGExMG5mdnhaYXcwajlCQzU3UXZaZDAraEN5ZG92ZgpWdkNxcE1FWkxpS0xpSGNZbGdLd2ZoQ2JmcmNWTG9ZR09NZWZIUVhjUUhHdWtkWk5NR3ZDWVJqUTY4b1F0VEVyCi9MNGNYaFFZdTk2cERybVc5cHNCTnNXRkFvR0FDaDNuYWZPcENmc3EwalVsYWRZMFA0SXQwUWdhdENrVzQzNU8KZ0t0d2V3ODkrNU1NZzh1VTRDNkRJbGFzcWpUc3VGeEJpSjV1eEFPRElIVWxDTGx3TElYNEZ5ekp3bW9WcEJXYQpwSWJ4UHl3NEhQMmN5VUNZcVFGeFdtWUE4TDU3WU42Vzl2bmlYRnZudGk2cGwzTDFZRVZmYUd2RytCUUdNNUV0Cml1QzB5MGNDZ1lBYjNDdk9jbWtMMHk0eVNPU2lRTVQvdnlPUEFReHB5RHpHQlp1R0hhbjB0TjlZenR1RlNaOEgKWDVIOENCNGRJMm15eUVWVVQ4S0pBUUJSVThZSTdDS0V1WHc5OGQ2UE5vTnBnNXIyVzVCWVlueGJ0bXNkL1JCcgpSVGdRbUNKbzl4SlNSOXkzelBhcVAwSjNDV2ZRbTVpS2FWbXVhbzlaQVdobzNOVGpEN3BDbnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWVRHNHlEQS9TbndEc2EvVnZ4NjlXekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRBeU1EWXlNRE0yV2hjTk1qWXdOREF4TURZeQpNRE0yV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRERJSmIrdmZIeVQrZkEzVmhxU2VEUEJuUEYxaHB6L2lFWWZ1bUJzNkh1WXViQmxZM1kKUXovTmFSY1VHUE9iVFpqbndybjRkeE1samV1NmxPNWh5TVFzQ1BOMURqQWpBbkhMaE9QNnA0V0NxZnZ3d1ZmaApJZkVucnc0Z3NES2duMWdEcTIyaFRWWi94WDNuT2pwb1JBWWdQcHdOaTMrRWxXcWcvblJaUGpHUVlvNUhvVjlKCkVxQlNXUUFMeEM5QWdDUHQvWjdpOTEyU0NGVVVNSksxOWNnYk5sSVdKbDlTR2hQS3NuVlpRZWpWaGJwNkJVNUgKdWtQYUJGaytnenF0WDRYaXhuTVlid2xSNVB4c1N6YnpvQ2YvRTU1RjVxNldQVFJNcktvdVp2Wlc0WllaRStYSQpmSmR6Wit0czhzWWNWOENUVHlxK2QwL1VGMWtDdVpNN0xuSDdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxMkdtbHd1V1kwRFhwcVpXOGhQUzY4TVJkRU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKZDNOQU5nYU9HQXpGcWdJTEhUM3JpQnJNNy83dHVLb3p0YWc4aHBlU0lMUGVsWG1FL2RFaFdRCi9iOUhoM0N3RDZRQnVZRHNtYkthRXBGQUFOdVAyQzBhUzN2aHZmOExhWjVRditpNks4RGNPc05ERmhzalJXOXQKMnJqalgyMWt6dEtWY1dYSnBZRjU1bVJNSTVoOTc4ZDZVbk5nM0p1Mzd5Yk5td3NBMlBOdFhlaC8xcDZkdzUyUwphdTBhV29oVnltVUFYZjVqZ05memtoRTZUeTUrWHJva28vaEd6UE9kTmI2WjB4L3RMUmg1QnBhZVJLWDZqKzYwCjdQdm5uYjlhWFlJNnVVVjdmNnZOdmV3KzZaRWVlNEdKSHN3ZEtuYlN4eXBJcVdaT1FnbnViaHZYSHpQZnNDVksKU1VxU2kxRWowSzZkd2ltNWQwcWpvaVNpVFFKclJtST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQU91elhUaWh0TU5jY2wzTkFHN2gzaWd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURRd01qQTJNakF6TmxvWERUSTJNRFF3TVRBMgpNakF6Tmxvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0Q1Znc2QvenJxQUwKaVZacVFsMERURldMcTFubG9zUWRXWEIveDBCOFFUKzNlRkt1WnJEa204czBNUEtvTmxFeWc2Q1dGQlRPeUJvbQpxakkzcmNzai8xbFpwK1pVQXYvaGErUE1iZ1EwUWQwKzI5ci9GamNHQWMvZEpFUm9MRjNYYzdLanJVYkluQ1ZxCmRCKzM5YjdZUW5hWGZqRmd1SlA0Q0Yrc1hBYTc2a241VzZUVzYvNkcwVFZtYWQ3U0ROSzB5Vi80cGR2dGFuZmQKUlZZcWtveWcrd3hQWXFnemNvZndiZ1o5empEckxiTlFUT0ovZ1FacWxXbmV5RGxWZzlPTXpTaU4wR3pIeklLNQpLelNaMnNoczlPdUtnN1dNendwVkxjY0N2YVdWRnVJcWhCRE1KaVgzQzhkL1JZalc2RTY0a1BaVnBUMjhrUDFyCno4WmorQWtTNlFJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRYWWFhWApDNVpqUU5lbXBsYnlFOUxyd3hGMFF6QXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKWGtYRmNHV2NXY2ZPNTEKSTI4TnRhLzA5MzhiQndkMzhBUHhUWUtMNW9VaDF4YzBjNGFOYS9iRUQ5TmRER1dQMWdTS3Y1M2JvNm96ZEVoUgoxNDZWT3llMG5FdmhjN1VZS0NQaEtlRnF3NW5MbExMaWlVNGxqSGRKWHRvSHJ3d2N3cDJOVGkvcUxGSDVpN0hrCmVWSm9TUUR5a3lEaUlRRmxVSkFHcm9TbkNnUWdjN0ZnYTAwc3ZXZXhnMENxQlJZMEtFbGROOHhwVXNVM2RHSkEKeWI3NWtnM21meTJiWDZVd2xndmxIbmdCQzFiOVA1OVcvVElvK0xJTXF5NGVEME1jZTZOS0tmb2xNak91MWd4WQpqTEoyR3J0ekFsNG8wc0Z0UlhQYW0wK3BqTDN1RHRVTHYyd2ErRDZidzdkcVNFU2ZnTjRTQ2I5cGp2aDVRd1A0ClVDNDNGRFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdENWZ3NkL3pycUFMaVZacVFsMERURldMcTFubG9zUWRXWEIveDBCOFFUKzNlRkt1ClpyRGttOHMwTVBLb05sRXlnNkNXRkJUT3lCb21xakkzcmNzai8xbFpwK1pVQXYvaGErUE1iZ1EwUWQwKzI5ci8KRmpjR0FjL2RKRVJvTEYzWGM3S2pyVWJJbkNWcWRCKzM5YjdZUW5hWGZqRmd1SlA0Q0Yrc1hBYTc2a241VzZUVwo2LzZHMFRWbWFkN1NETksweVYvNHBkdnRhbmZkUlZZcWtveWcrd3hQWXFnemNvZndiZ1o5empEckxiTlFUT0ovCmdRWnFsV25leURsVmc5T016U2lOMEd6SHpJSzVLelNaMnNoczlPdUtnN1dNendwVkxjY0N2YVdWRnVJcWhCRE0KSmlYM0M4ZC9SWWpXNkU2NGtQWlZwVDI4a1Axcno4WmorQWtTNlFJREFRQUJBb0lCQVFDdGI2OEFrWlNTY3hPbwpUY0pQMGl6eXVRbVhGeDIyN3dreXF0VGFpSU1ZYnJlODZCMXdVSzVJTUFNM2ZPZm1JNVoyazR6cUdINWN1SkN4CkcxZnZ3cndOZzRDRjNZTFV3SFhPNGFwWDRVUk9oU3VYaitnM0F4S05mQXAwZUVlekwwWFc1ZzRmTFI3RzlsN2YKSGdxR1ZnN3ZMaTM4R0ozK0ZyZWRtRDdnK3JyQWZJaDlUWnVmSXVpVVExSWJhWGYzMkxtNXl6WEpyRmVtSHNQLwp1MHRMV0cxWnUvTXZFWkl5M2RyL2h6em9pdnZmNnIxR1ZUeFoxWlYrZzFicEhRWUJWTFJNOUtYMnBhekE1RlY2CldHZlluTGJyOG1nMElQZitobGtISXE5U1FMZG1SdDBtYUQ0TThBTVFQY2Y4eEtsV2d0LzA3WHA3V1BPTHI3YlAKWnlEeWZNdGhBb0dCQU1PVTdRa3ZLQUN1aXBQNlNHUVJab2JRakdFc05XSzZwNm45UHJGL0tQWHhXbXlCQlNlbQpJVCtRNEtpWjF3dEZrWmg0R1lESkxlVndpbm1PU1dXZmZHSUQvMVBsWSsrTm53SmtEaXBoZkpFN1J4K0JPbnZGCmYxNG1Nd1BrMDF0OWUwNTJYOFVkM2lJWnBLY3dkR3BWbCsva0xZRWVDMkk0SCtaSGF6Wm5pWEYzQW9HQkFPdkwKd2J0eHZDczQrNTRtZ2xMNHFTbWxFRXB1Y1ppN05tK1lkalQ3dnBUY0puMVd5dTZ5bUsrQzN5Y1pIbXpjdGtKcwpyajBDZmcrZ3NzYUV6WkV2VHY5STRaeHFqSlJ5R3NVcGtxU2kvS2xZMERBSjRHS2JnK3hjYU5UODZqU0I0RjdHClc3MndDS3JwUFRNTm1IQy9VOHF3SzZzc001K1A3eUx0YUdNZFI3YWZBb0dBUjNsUFBvSDdMblNhdEFWTkd6UzQKc1IvWmpWRm9tUkg1WDhmcWQxY3ZFdUlHMTR3MjVBeDBMaFMxNVNlRFROMDVuZXlWOVZpUDZ6ODdlN3loMmY5MApweVVxMC9BS20ycTM1MW5GUzN1ZzJEby9mYVh1UjNrZldMckEvZlZMd0MyVk9GRk9JbTBOMW94a2ZhelpmbHFWClVkZWpRWUpIU3JlVUFNV3N5bzcvelhVQ2dZQURnK0VhZTBLVDNtQ1o1ZmNSWjVXV0FsancweDZzYVRZUmlkTlIKVE9OMWNxYThQWnYrM1BpN3ZSYTRqWDVQbnlhMGJNeFlLbjVZbTB1dSsvSFlsVHozUDAzbHVBenFkWjBDalhFYgpOVGJSQzNybkRHNms2YTZZeW5QaG9QZVkyc3JPZnVTRk9tZVdySzExNG1FQVpVbkpmc0RYNTJ2Sm1DcTNlWlNSCnpiRHcvd0tCZ0VVdFJ1L0h6VVJHK2krTTJzaE1RbjhrRWFRb1RnZHFCV2N5REY1VFdOVXBrb0V0V1IwRjBOeVYKQW9VWHEya1VOZ0F4ZDVvanpkSjdOM2c3RnVxeEQvNnhDVnNPYVZ2UENoalJMeTcxeTk1bm1aYjAydXVSTU5FTApwd2dJcHB0dFlkakx1QjFOQ2lzVURBNFdEeVVOTkhBbW9NZ0Vxb0pFdlhCakhxM3FIbFlSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: home-cluster
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.244.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: home-cluster
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.1@sha256:428a09552707cc90228b7ff48c6e7a33dc0a97fe1dd93311ca672834be25beda"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.1@sha256:f47ba86042e11b11b1a1e3c8c34768a171c6d8316a3856253f4ad4a92615d555"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "home-cluster.strallow.cloud"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "b0d2234857ce90387e77c2bfed3154d6366fbb66fe17de3f45d559cc62b318f3"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.1@sha256:ad7ce650c7877f8d769264e20bf5b9020ea778a9530cfae9d67a5c9d942c04cb"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/hubble-ui/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
  annotations:
    ingress.home.arpa/type: internal
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
spec:
  rules:
    - host: hubble.strallow.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hubble-ui
                port:
                  name: http
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
