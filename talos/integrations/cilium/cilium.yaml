# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: ""
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xSEtWUmkvZHl2eHp4RVNJNXlGNVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qQXdORFExTWxvWERUSTJNRFF5TlRBdwpORFExTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2SHcvcUl4VnIzU3kxOTVKaFlOT3JMRzE3VDhjTy9aRGpCVVU3Z1pMbjFzeU5QRkIKeUZacVhHMDd2NGUwUmdhL1dpaWorY29TSE5sOXduZEJQUVJCcms3MmQrbUVFSWFVSnNPYVRMOVlYMUhQa3cwNgpXditzV25TSDFCWWxOSXEyWTY4d2l2UWxqd0YzL20rZmtyMW5oWHJydGE0dEpLdFptQm0xaWFUTlk4RHdjY3I1CmJOSDBvQm0wV0NDZTY2OE5TWUVoVWk1d1VUSU5vOTVaVndqdXlaRm9WMmJhK0JhWWJISWNVa3VmUjlLQ3UyTWEKRmVicUlaWHhZMGkxdjMwQVRXbyt3M3YwajhhZGpEWUZ6V2VCeDlpSFpLRXZ1a21BYVRqOHIxQmhybjRlRDFDUwovNURiSVB3dDVhdVlxK291ZWZJYUZKWEo0ZEtmZ1ZOc1lGaVNoUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0FITFdNTTBxRnF2WHhvenpIWkVuNTRxUjZ3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0tLbEVSaFpPdnY0cUUxM3gzWUEvYit5YXZNVHJEMGdEMWs5a3FsTEJJS3BlVmpjZzFsNEltCkdBMDhQbU1jWlpIUldCblFpeVhUY3hCYUlqWXI2NWs5cjBrVlVZa2VCcEVybjl1Y1MxSDNobVhzQ1NOYzIvdUsKanNTK0FDbUJDN3huZGV5aGNjN2s1WEJYeDZSTkVUcEI4RjNuV0lZRm5EQzh1c21XS2FReW9BSDE2ZkgxeVlEUgoycldrN0VONDVmMU9jcXArVHZGd21qbmUyeFBBZ21TR2hKaHc3YlRpdjhFbXVEODJNS3NxSmd2ZzA2MWkvM3EzCnpHdmk4NklOMjU0UEs1YjcwRjhlQmNJVDd5Mm5BSXE4RVF2a0ZGa1FTSTI1Y1JhY2wxNzdvSXAzejVwNjBqSzYKUHJ2andIVjdXcnRLbjVraVhJc2F2TVVPZFQ2d3AybFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkh3L3FJeFZyM1N5MTk1SmhZTk9yTEcxN1Q4Y08vWkRqQlVVN2daTG4xc3lOUEZCCnlGWnFYRzA3djRlMFJnYS9XaWlqK2NvU0hObDl3bmRCUFFSQnJrNzJkK21FRUlhVUpzT2FUTDlZWDFIUGt3MDYKV3Yrc1duU0gxQllsTklxMlk2OHdpdlFsandGMy9tK2ZrcjFuaFhycnRhNHRKS3RabUJtMWlhVE5ZOER3Y2NyNQpiTkgwb0JtMFdDQ2U2NjhOU1lFaFVpNXdVVElObzk1WlZ3anV5WkZvVjJiYStCYVliSEljVWt1ZlI5S0N1Mk1hCkZlYnFJWlh4WTBpMXYzMEFUV28rdzN2MGo4YWRqRFlGeldlQng5aUhaS0V2dWttQWFUajhyMUJocm40ZUQxQ1MKLzVEYklQd3Q1YXVZcStvdWVmSWFGSlhKNGRLZmdWTnNZRmlTaFFJREFRQUJBb0lCQURXRVVjN1ppYnEzdDgvegpIWXo3SzJ0OVNkcURBTkZGcXdnck5EWWhNM2VidlRXckNyS0hWc3ZIZUI5NXVJWHBoSXRrM3FvZDVlYXJHam9OCkFra0EzR1ZScGttRjFDbWRESk8xRmlxVWFkTW10M2xaV0NoZVQrR2ZGTEh6VjcwRFphWUlLQkJNSWgzb25ObHgKZUMyQitkSzhoQkNoMDgrRmwzcklVZk16Qjk0NmZFdzNGWFhmMEZFU2FvWU8xQVZvaEdmay9sajRDazVqTStyNwplNjVjRE5aVHhQa04zczZ6VUZVUndlUDcrdWRjbytLbUFIRGMvNW5JcnpudHlDMXFQUHM0T2twRmVVRUJ2eXB0CkVRM0k5c2dDZndNWFI3SzlieENCNGVvTFVNS0g1UE1CTEJBeUphdkVVQUVFM3Q3R3dlUmt4NDlNaFUxNXlYZkIKV25uVUhrRUNnWUVBK1Zxc3RtUSt5Q2RCamRFRE5jdHNITWNCbmg4Y1lXU0V3NVFaai9sVzRCT3cxL0J1dXV1ZAp3WWxyeWhZS3pKdzROV28zbXNSSjZBWTgxZHB0VDgxQy92RkU2N1puTEpNWEh4VnU5QlFjRGdSdXFSYjBKckNTCjQxdDJCL1BpaGcveFJ5UXhRTDMxM3RESEtUcytTNmt0aVVpK1paZW5ORldvbFBBcE5KUEI3T01DZ1lFQXdZSkYKTXpvSGlFQUVBOW94RlRPdUFNc0NMWm5IWkhhQnJIcjV2bkhYR3BCeXllVzRMcCswRUtuRHY4YTgvSEo4M3d2cQpoUEtPZVZHYWxGaEFaNDJaTEtZSTJtUUlMNU1ZdFl2MkJGNEc3cE85YXVJcnJSd2lBZVd2eGE2elJHMGZ4dXQ2CmRzY0Y0aVhPZ0JSMU9nZTQ1TitxWjlSNzFwRE1uVjI2WGJubHgzY0NnWUVBdlFsMDdrRkpKMHc3Y2x3R1p2MzAKMUV3NmVibDBOcEdSNVFPZDdYeEYxRktaT3R2WDFuVlJmNnZDdjgyK0dpaEVwSm9GMVpzQnZKa2QvYkkrTk1XVQpDTnE0T1VwckpXdk5sNDhVTW80Y1JyUXRnSnNhTlVxZjBTVkJjZjMrdVV2VXl1NHhPTGZLY2tVczk2RW1OUTNvCnE2OHVTSzZUNENVZ1RPbFZFN3NBeGFrQ2dZQk1CblpSamZidm5OYjIvSDVVS2gydXloTnMvd0hMZ3BPbnhCamkKcmE4cERKOU1teWdsaVRFaGF0RXhRMDkwanpab0d6SmtVVGVRaW5NRTNUZFFkOTA2SVhGUS9BUUxUT3RrU0R5Nwpzb1ZlcmtTNC9XclRkRDRZS0xsS0hUenBJVVplekowc2xUekdnTHdFcmdUd2E2QkVxMnN6cDlPUGxRd090NGhFCjBvaG9PUUtCZ0FkK25IZng0VGUxZVFVVk51ZnRqeGVXVW1rUWYrTU1ybUp1RUwyeCtNaVY4ZWhaNUhEZysweWgKazI3RkI1UXZkbG55Mys5MHJTM21jVzRBSytZZWo2OUR2V2xvb1UyS3lJZkNuckZ1OVZSQzV6b2lhVFUwbndOTQpram5aN3FIVEpYdlM1OXZnYU92SERPa3VRNGQ1UURVbDhnVGJSSlR0YS9GZnBMK0dOaXk1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xSEtWUmkvZHl2eHp4RVNJNXlGNVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qQXdORFExTWxvWERUSTJNRFF5TlRBdwpORFExTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2SHcvcUl4VnIzU3kxOTVKaFlOT3JMRzE3VDhjTy9aRGpCVVU3Z1pMbjFzeU5QRkIKeUZacVhHMDd2NGUwUmdhL1dpaWorY29TSE5sOXduZEJQUVJCcms3MmQrbUVFSWFVSnNPYVRMOVlYMUhQa3cwNgpXditzV25TSDFCWWxOSXEyWTY4d2l2UWxqd0YzL20rZmtyMW5oWHJydGE0dEpLdFptQm0xaWFUTlk4RHdjY3I1CmJOSDBvQm0wV0NDZTY2OE5TWUVoVWk1d1VUSU5vOTVaVndqdXlaRm9WMmJhK0JhWWJISWNVa3VmUjlLQ3UyTWEKRmVicUlaWHhZMGkxdjMwQVRXbyt3M3YwajhhZGpEWUZ6V2VCeDlpSFpLRXZ1a21BYVRqOHIxQmhybjRlRDFDUwovNURiSVB3dDVhdVlxK291ZWZJYUZKWEo0ZEtmZ1ZOc1lGaVNoUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0FITFdNTTBxRnF2WHhvenpIWkVuNTRxUjZ3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0tLbEVSaFpPdnY0cUUxM3gzWUEvYit5YXZNVHJEMGdEMWs5a3FsTEJJS3BlVmpjZzFsNEltCkdBMDhQbU1jWlpIUldCblFpeVhUY3hCYUlqWXI2NWs5cjBrVlVZa2VCcEVybjl1Y1MxSDNobVhzQ1NOYzIvdUsKanNTK0FDbUJDN3huZGV5aGNjN2s1WEJYeDZSTkVUcEI4RjNuV0lZRm5EQzh1c21XS2FReW9BSDE2ZkgxeVlEUgoycldrN0VONDVmMU9jcXArVHZGd21qbmUyeFBBZ21TR2hKaHc3YlRpdjhFbXVEODJNS3NxSmd2ZzA2MWkvM3EzCnpHdmk4NklOMjU0UEs1YjcwRjhlQmNJVDd5Mm5BSXE4RVF2a0ZGa1FTSTI1Y1JhY2wxNzdvSXAzejVwNjBqSzYKUHJ2andIVjdXcnRLbjVraVhJc2F2TVVPZFQ2d3AybFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkh3L3FJeFZyM1N5MTk1SmhZTk9yTEcxN1Q4Y08vWkRqQlVVN2daTG4xc3lOUEZCCnlGWnFYRzA3djRlMFJnYS9XaWlqK2NvU0hObDl3bmRCUFFSQnJrNzJkK21FRUlhVUpzT2FUTDlZWDFIUGt3MDYKV3Yrc1duU0gxQllsTklxMlk2OHdpdlFsandGMy9tK2ZrcjFuaFhycnRhNHRKS3RabUJtMWlhVE5ZOER3Y2NyNQpiTkgwb0JtMFdDQ2U2NjhOU1lFaFVpNXdVVElObzk1WlZ3anV5WkZvVjJiYStCYVliSEljVWt1ZlI5S0N1Mk1hCkZlYnFJWlh4WTBpMXYzMEFUV28rdzN2MGo4YWRqRFlGeldlQng5aUhaS0V2dWttQWFUajhyMUJocm40ZUQxQ1MKLzVEYklQd3Q1YXVZcStvdWVmSWFGSlhKNGRLZmdWTnNZRmlTaFFJREFRQUJBb0lCQURXRVVjN1ppYnEzdDgvegpIWXo3SzJ0OVNkcURBTkZGcXdnck5EWWhNM2VidlRXckNyS0hWc3ZIZUI5NXVJWHBoSXRrM3FvZDVlYXJHam9OCkFra0EzR1ZScGttRjFDbWRESk8xRmlxVWFkTW10M2xaV0NoZVQrR2ZGTEh6VjcwRFphWUlLQkJNSWgzb25ObHgKZUMyQitkSzhoQkNoMDgrRmwzcklVZk16Qjk0NmZFdzNGWFhmMEZFU2FvWU8xQVZvaEdmay9sajRDazVqTStyNwplNjVjRE5aVHhQa04zczZ6VUZVUndlUDcrdWRjbytLbUFIRGMvNW5JcnpudHlDMXFQUHM0T2twRmVVRUJ2eXB0CkVRM0k5c2dDZndNWFI3SzlieENCNGVvTFVNS0g1UE1CTEJBeUphdkVVQUVFM3Q3R3dlUmt4NDlNaFUxNXlYZkIKV25uVUhrRUNnWUVBK1Zxc3RtUSt5Q2RCamRFRE5jdHNITWNCbmg4Y1lXU0V3NVFaai9sVzRCT3cxL0J1dXV1ZAp3WWxyeWhZS3pKdzROV28zbXNSSjZBWTgxZHB0VDgxQy92RkU2N1puTEpNWEh4VnU5QlFjRGdSdXFSYjBKckNTCjQxdDJCL1BpaGcveFJ5UXhRTDMxM3RESEtUcytTNmt0aVVpK1paZW5ORldvbFBBcE5KUEI3T01DZ1lFQXdZSkYKTXpvSGlFQUVBOW94RlRPdUFNc0NMWm5IWkhhQnJIcjV2bkhYR3BCeXllVzRMcCswRUtuRHY4YTgvSEo4M3d2cQpoUEtPZVZHYWxGaEFaNDJaTEtZSTJtUUlMNU1ZdFl2MkJGNEc3cE85YXVJcnJSd2lBZVd2eGE2elJHMGZ4dXQ2CmRzY0Y0aVhPZ0JSMU9nZTQ1TitxWjlSNzFwRE1uVjI2WGJubHgzY0NnWUVBdlFsMDdrRkpKMHc3Y2x3R1p2MzAKMUV3NmVibDBOcEdSNVFPZDdYeEYxRktaT3R2WDFuVlJmNnZDdjgyK0dpaEVwSm9GMVpzQnZKa2QvYkkrTk1XVQpDTnE0T1VwckpXdk5sNDhVTW80Y1JyUXRnSnNhTlVxZjBTVkJjZjMrdVV2VXl1NHhPTGZLY2tVczk2RW1OUTNvCnE2OHVTSzZUNENVZ1RPbFZFN3NBeGFrQ2dZQk1CblpSamZidm5OYjIvSDVVS2gydXloTnMvd0hMZ3BPbnhCamkKcmE4cERKOU1teWdsaVRFaGF0RXhRMDkwanpab0d6SmtVVGVRaW5NRTNUZFFkOTA2SVhGUS9BUUxUT3RrU0R5Nwpzb1ZlcmtTNC9XclRkRDRZS0xsS0hUenBJVVplekowc2xUekdnTHdFcmdUd2E2QkVxMnN6cDlPUGxRd090NGhFCjBvaG9PUUtCZ0FkK25IZng0VGUxZVFVVk51ZnRqeGVXVW1rUWYrTU1ybUp1RUwyeCtNaVY4ZWhaNUhEZysweWgKazI3RkI1UXZkbG55Mys5MHJTM21jVzRBSytZZWo2OUR2V2xvb1UyS3lJZkNuckZ1OVZSQzV6b2lhVFUwbndOTQpram5aN3FIVEpYdlM1OXZnYU92SERPa3VRNGQ1UURVbDhnVGJSSlR0YS9GZnBMK0dOaXk1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xSEtWUmkvZHl2eHp4RVNJNXlGNVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qQXdORFExTWxvWERUSTJNRFF5TlRBdwpORFExTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2SHcvcUl4VnIzU3kxOTVKaFlOT3JMRzE3VDhjTy9aRGpCVVU3Z1pMbjFzeU5QRkIKeUZacVhHMDd2NGUwUmdhL1dpaWorY29TSE5sOXduZEJQUVJCcms3MmQrbUVFSWFVSnNPYVRMOVlYMUhQa3cwNgpXditzV25TSDFCWWxOSXEyWTY4d2l2UWxqd0YzL20rZmtyMW5oWHJydGE0dEpLdFptQm0xaWFUTlk4RHdjY3I1CmJOSDBvQm0wV0NDZTY2OE5TWUVoVWk1d1VUSU5vOTVaVndqdXlaRm9WMmJhK0JhWWJISWNVa3VmUjlLQ3UyTWEKRmVicUlaWHhZMGkxdjMwQVRXbyt3M3YwajhhZGpEWUZ6V2VCeDlpSFpLRXZ1a21BYVRqOHIxQmhybjRlRDFDUwovNURiSVB3dDVhdVlxK291ZWZJYUZKWEo0ZEtmZ1ZOc1lGaVNoUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0FITFdNTTBxRnF2WHhvenpIWkVuNTRxUjZ3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0tLbEVSaFpPdnY0cUUxM3gzWUEvYit5YXZNVHJEMGdEMWs5a3FsTEJJS3BlVmpjZzFsNEltCkdBMDhQbU1jWlpIUldCblFpeVhUY3hCYUlqWXI2NWs5cjBrVlVZa2VCcEVybjl1Y1MxSDNobVhzQ1NOYzIvdUsKanNTK0FDbUJDN3huZGV5aGNjN2s1WEJYeDZSTkVUcEI4RjNuV0lZRm5EQzh1c21XS2FReW9BSDE2ZkgxeVlEUgoycldrN0VONDVmMU9jcXArVHZGd21qbmUyeFBBZ21TR2hKaHc3YlRpdjhFbXVEODJNS3NxSmd2ZzA2MWkvM3EzCnpHdmk4NklOMjU0UEs1YjcwRjhlQmNJVDd5Mm5BSXE4RVF2a0ZGa1FTSTI1Y1JhY2wxNzdvSXAzejVwNjBqSzYKUHJ2andIVjdXcnRLbjVraVhJc2F2TVVPZFQ2d3AybFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRTUZyWngyWGJKRTFRYnBRRnF3akhoVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJMk1EQTBORFV5V2hjTk1qWXdOREkxTURBMApORFV5V2pBdk1TMHdLd1lEVlFRRERDUXFMbWh2YldVdFkyeDFjM1JsY2k1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE1FeGtYN1dleUNVMVcKUml4TS9sL1AyUzExSmxUbDJDRnlOVnBnS3A3cjAwMS9DWWd4VDF5ZWVDUEdadlpwZnJPN09la2hUUGdMS2JaSApHY01PaXJiNnR2TFU0bHQyN1Z2K1hFcVVXZTlNeUZjOXdyYzY5bGRTOGw1QUdNZnRxc0w3cVVBU2dMM1VoL21RCnJhdHJZWXdSUm1zUy9oTnBGNVVMTVFvZ1dqZFJzdW1EeG9BZDI4US9aYk91bUI2SzRtU3AzbThlZkVJc3NyM2cKV2JyQU5Xa0xDQm5STUpDd1VCcDVvTTF3SUluY1VvWUIzMVVRZlRKWmRBa0R4blQ5Q2RnSWFqM1dHSXZJQ2NxZQoyWkxTQ0MwRGx3eEF3MFhjTThoVnByVFVhVmhaeUFlVHNrV04xNit2K3p3TERDNzlXb0czOWU1a0JVbHkybTFuCnpmem4vdkhWQWdNQkFBR2pnWkl3Z1k4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQ0FITFdNTQowcUZxdlh4b3p6SFpFbjU0cVI2d01DOEdBMVVkRVFRb01DYUNKQ291YUc5dFpTMWpiSFZ6ZEdWeUxtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXExNTFMQXdocVpNbUZQeVAKRWlyZTJ0SlVmYlNDT0w5SmszaWZOaStOQmZlMlV0SmhQOXprTDVwbU5ObXBtS2R4WklBYUcwME5FQzJLRko4NApRSk8vVXpFaEZLZnB6bnB4U1lGWmdNSFUvTURRNXd6OEJlc3FHSVA0d2tLWlhJSWFhN1diTEJ0aURrS096R1ZtCm16UjQybE1NcXA0Z0w2ZXU3NXo0dzNXRGNlREVscmdwNjlEZThXZGErV3VqeDQvQmgzT0kwaG1xZ0hHTGdHVHYKT3A3TWwwVUdTdGcvOU1zWjdxWUsxRk41VDZYT2V1VklLb3ZISTV0WXhjNEJ5U2dveHNPRUZRWWJ6ZDIyMUltdQoxVm0xZ0hMYjVBSjhmQUpnWUpISFM5YkFCYldZSkFqVnJ4bXJHVzM5eWowRk5WYzJRd2ZnRlVwUEpiTFVZczJnCmZEOWN2Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekJNWkYrMW5zZ2xOVmtZc1RQNWZ6OWt0ZFNaVTVkZ2hjalZhWUNxZTY5Tk5md21JCk1VOWNubmdqeG1iMmFYNnp1em5wSVV6NEN5bTJSeG5ERG9xMityYnkxT0piZHUxYi9seEtsRm52VE1oWFBjSzMKT3ZaWFV2SmVRQmpIN2FyQys2bEFFb0M5MUlmNWtLMnJhMkdNRVVackV2NFRhUmVWQ3pFS0lGbzNVYkxwZzhhQQpIZHZFUDJXenJwZ2VpdUprcWQ1dkhueENMTEs5NEZtNndEVnBDd2daMFRDUXNGQWFlYUROY0NDSjNGS0dBZDlWCkVIMHlXWFFKQThaMC9RbllDR285MWhpTHlBbktudG1TMGdndEE1Y01RTU5GM0RQSVZhYTAxR2xZV2NnSGs3SkYKamRldnIvczhDd3d1L1ZxQnQvWHVaQVZKY3RwdFo4Mzg1Lzd4MVFJREFRQUJBb0lCQVFDUHZLUGdCb2NURHhvNQp1aE5aNTVEMGhMTlA0RC9MNC84cXdnbDEwbzg4NndlYWdzdzZidnQ5WW9GUUxSVkNHTXZmQTFzQTZZV0wxMFZiCnJ2bUVOSS9NNXk4Q1lxeXBoMlZVTXcwVWtJUE1RUSt4b0lRT001UXVDQ2Y2WFhuMEhHSlpmMHh4dTl2NDVnMFIKcWtFaTBRSW02TUppRGpMOXdtNW9BNUp1Vnh5L25WSmtWeFg0bklkTUZtZDhzRGZUMmx0aGZYSkcxUUU5R3I4ZApjLzNYdUVhTmVwaHFrbVZQaEpPWGhhbkdHZXIvTS9sTWtkYm1FQ1RyTGhMRVQyQXdkckhzTjlxWk1MK1hKQ1RyCmNrSXhPQjB0NW9ndzFlbUMzamJ6NlVkVXltSUpnbW4xZkREYUlHNHlDR1RKQ2ZGRVU4OWNnZW13bjM4NExiMUoKRjJ0NjZxdkJBb0dCQU9xeENwNUtFS1B0SWcwMUYrc3FKVHBpK0Nqb3dYTWpFT2U0aXpNSEt5ei96bWpjaEZZTgpGaHFiam5NRHNPR2ZTdzRlTk9OOWE1am1TNzV5QzR2LzFLU3BrUm42L2RXQktMRC9vZGI5L3dLS0dHN2ZZM29oCktldTc2T3B5cTgvOTFFK2hVd1NRR3JPWUx6elpKVmRTbXlKWFhObWN1TUpRNVppT3NXR2E4bjFEQW9HQkFONmEKYkdoREpFNG1RN2dkbmhSTVVWdElGOFIwc09vWERhdWJKUktkMm1xQ1RSZHFjK0lSMHZZS0h4KzBZUy96dldxVAplZm1tWDdiQ0hXTm0yL3UyaVdXVUNPNHFYcy9KNjRFQUU0c0JPOER2ZmNoSmc5cUFLaHRUQkxkUWhDd05xY2gvCkVra2VwdGYyMXZaUVFZK2Z0MTJ3aW42SlQ2SnJuNGJtcVg0QmFaY0hBb0dBSDBpNlFaOWQySHdqcmQ4RjhUTU4KQTF0dCtRWU53MnRKTlpwRDgrbGd0LzdoWk5rQVN2Z3ptaGhpUkxLWlFYb2FaeWRmcFhOeWhFOHVpWlJxTlo5RQptUzZCU1JWTUFNbld3c0ZRc1hmcUpreUNOVVZSM1ZYT1lMNExyalRhOGo3RHJsbXkxMGplUmxKaStabDRnTXRpCklwSENycjlWWVpHbkNVNzhGaWF4YkVFQ2dZRUExVFZOVGhPNUMwMGxJWXprb3daeUNoOGovSnZUODNLL09qVncKTGNPWnR0ZzA1SSttak1xTHAvTUwybjhYY3lsZXJGeXl3SVkxT01QMkNBWTEvNExYV0w2UVN5VzBDQXVia01RMAo4N2ZydHFEc2RkRE1CSlVyUDE2bHJycmt6WmtNbktmeEtLMitHaTRudUdZb1ZWc2g4dytycHdUM2pGYk94aFBhCkZZRmUxRE1DZ1lCS0JESnoyUml2YnhOR3NqcE5KZmFnTUhkYmtBOWZML0FTNkhqaE1HcWVmN1pKdElFYk1mS2UKV0g4WjRhcFUrQVVkeUdkbkVLOGFRb2RSdzNKbnRkUlBXNWtiZVRuQjltYkJ0S3IySFF3WCs3dlpHK2FUcmFncwpLdXM2RXpDelQzWnljTlROOGFITE05RmpRZVQ4Y01GRWYrL3NuME02WjJCaVpyYkZVUkFFVlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
