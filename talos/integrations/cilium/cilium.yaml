# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: ""
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnVtc0c1QmFBVHV0VGZ4WHZ1MUlOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJMk1EQXhOekUyV2hjTk1qWXdOREkxTURBeApOekUyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHJiZncvQTZwZWtqNm14Q2UxWjFNY1Y3ZkJjMm1kWkNFWXNKRTVnOUVjdDZaYW5iSGYKTC9tRGZ4SklsSjBEaHJwVU1uRkd0T0xSUmtwYVk5L1E2UjkvaTk5c3BDSE85VGFTOHZkdjY1SE4wNEd4VkptRAo5Q2hBYTBpbFF0L0JLai9PUEJRSmlDQXl5em9NWGNRQXpMZXVVME80b2I5cmdSd3BCMmE4ZFJ5bVptKzVLUXk0CkhLT2ZjR0RBSEQvM2NJNS91SCtFcDYzV3BlTFIzTDZ0eVZGRnFNcEhwWFdEOTlNUGxvSlYwendpTm15OWJ0MmQKWGhTeVM3dXo1Q1ExS3FobDhDcWprOE1zS0tUTHR6R2JhajZDMnJJSjhEOFI2NU0zaTJ4aXhxUm1xK09IQVB2TwpiSm1lQ2JPWk5DK2VQd1cvWDZodVpoUjZhS0lFckZqWnRhR0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjSHhKK1VIcHdzdEVaWFJMV3pXMXdqcXpWb0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNzNxekhCb0hacmRUalhsOGFGNEVZQmtxYTlPbTZSZ28ySEFIM1U3Vk9SQmVSUml0VUlrUm10CkVwTDZxOUt6Si9JSnF2NUNuUDVRSTd1aWtKTmROVnM4MFdXcmtSM0JpcS9WY2tyNXN0R2t5N1VzSzdaYVhMcEcKdDJOWmFIMm9udmw0d0RNcHJzbS9kK2tTMlJ0TVoxUjRCUEpRczUzOXN5SWRIVTc2RzFDcDRrd0dzSy9FVStaawo4bHBBdEtjNUcxY0xybGVLOE8xUnJOUldKRmNYV1pWRWhDMitCNUliNmllWHVuVDJSUytvY2FEc0MxTHROTXU2CjNWaEN6WmRqMG56cVg0cDZDOVBZL3F6UCtSdkxwQ01oVDE1Qml1bzlyMjhMbnpOa3pqQjg3V1lMSXR5djNLQ28KMlRiZ2JSNjhUMHBac09xYzNrU3l5OG1ITTFCTkplUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNjIzOFB3T3FYcEkrcHNRbnRXZFRIRmUzd1hOcG5XUWhHTENST1lQUkhMZW1XcDJ4CjN5LzVnMzhTU0pTZEE0YTZWREp4UnJUaTBVWktXbVBmME9rZmY0dmZiS1FoenZVMmt2TDNiK3VSemRPQnNWU1oKZy9Rb1FHdElwVUxmd1NvL3pqd1VDWWdnTXNzNkRGM0VBTXkzcmxORHVLRy9hNEVjS1FkbXZIVWNwbVp2dVNrTQp1QnlqbjNCZ3dCdy85M0NPZjdoL2hLZXQxcVhpMGR5K3JjbFJSYWpLUjZWMWcvZlRENWFDVmRNOElqWnN2VzdkCm5WNFVza3U3cytRa05TcW9aZkFxbzVQRExDaWt5N2N4bTJvK2d0cXlDZkEvRWV1VE40dHNZc2FrWnF2amh3RDcKem15Wm5nbXptVFF2bmo4RnYxK29ibVlVZW1paUJLeFkyYldoaXdJREFRQUJBb0lCQVFDWS95cjBVSStCVWcwQgpGMnl1eU8wTCtEMWtySG93WElmZG9iRmU3VGtTTG84ZlNHZjFvUm5IeU9hNjRFbUJweWFqM1B3Y2RTVUoxMkl1Cmg4VkY0Sm9scTJLUkdjRVcyK2lSYXZBK2ZacU5aaXhjYjV3c1VwbHQ4OHFNQzMrWjZyajRiN2FkMHljSm0yU24KOEsrVnpYUjVCNGQxRHpoMHhyemtOUGtnOUFLZ1o2YU04QnNVS3RWRkdjVnJmMWYyTUswd0xDMzlYS1lvckp6aApYL1BvL3ZOb1lwLzc1TzF4aE8zUnRGejBYYUhwSGViZm9QNlp5Y2x4UGVib3ZWVUdjdnNQdGppRUZheGVuSlp4CjBQTVJPS3NtWlN5N1Z2UTJDTE5tTGVnMjZmUFJXMHNRQmp5RjR5dlZXSC9oS1h0YyswSUR5TFMvZ2pTNkxtVXkKeFI3RGdBUFJBb0dCQVBMM3BsbVZzN21iYWQ2OHpaNlZscUV2UkZZT09XaC91RFRiNEhTY0xXOTlab0lwVXJwZQpPRWFXZ29mYmM2MVBCbHI3eFBVekFmWURGcndmL2dzN2M2TUhMNGVhdTVtelNvMGhwZHBzODdRcmZBaUFwZUJ3CkVmU1diUEVrNGFuMzViMHZxb20rbG95TVltSEFrRTFYM1owbjhob0NsR040U0pQTVRSc2NrVVMvQW9HQkFQZ08KMUZ6RkE3ZzhFMjJPZWdVRkl3aTYvalI5T3l0L1I4S1Q5K2ZlNG5WVzRndnNWUFdDZC9iTTJ3RU1xUjNPTFFjbwpBUitLdFNnT0dQTjMxc1Y4bXlob3I4ZjhzNURGcE0yYjNLSHVTQU82b1ZQSWVsbSsya3ZYNU1aOTkvUzZBck0yCjRqR0JUMU9lNGFFUEFYVDFzQkpxRnhUdCtLUFhvbFpkNmVDSUdSbzFBb0dBSXp6NXVtcDAyNG1IekU4enZ6bFEKMUdYSGtuZVRxZTFFS1I1dXFscndXQWdtOHQvTmFNdzdlemxmQ3hjdjZzWFlWUi9JekFzdTBLQllEc2JSRUkzNQowbjQ3VFg2S2tOc3BCOWtHZGV4eFdBTXFoUTByZ2FhZlpBcmhHQVJTV2xWaTA1SnpPSEVVNHFPRnJVbkJaQVpIClZRQ3pJMFNXZ3VxeUZBV0FkVnNxVW44Q2dZQTVoejdxOE9vRzdTL1lSYVc0eWxNd3NDVktTUXpTN3FiVzBuZzQKOXpEdjQ2RnpBSEZIcXVWbGdHYitIRkNRVUFPVFdFekNZdW5XaTBad0dJZmZyeUZRd3M2Wmc5cWxKYUV0NmdyRwpKenZlV1ljV3BqVHg0VmhCSktXeS92M2xiTW81ZyszN2F6RFpoTXh4RE1qYXRpd0thVDVISlZWM3NnZTlIZlNpCmxRMjFUUUtCZ1FEaVVYdTV1MDBwUEwrUDZCNVQzcTNFeCtSVWNwTTZsMENsc2d4anRxNkQwNlEvVmxmUFFMTHkKUlJ3Z3l1Vjd1dTlwOEMrckVvNEhhS2NnMmd5a0J0c016WHdmTTZXMkdTb0NMS1Q5aFhKTVFxdmVwZmpjY3o5WQpZUWN4NkVDZjlJKzVyTStQQVoxamV2UzJFZ010aGwxek9CRlNDSWZtWngrL3lnc3Q1YWp5ZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnVtc0c1QmFBVHV0VGZ4WHZ1MUlOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJMk1EQXhOekUyV2hjTk1qWXdOREkxTURBeApOekUyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHJiZncvQTZwZWtqNm14Q2UxWjFNY1Y3ZkJjMm1kWkNFWXNKRTVnOUVjdDZaYW5iSGYKTC9tRGZ4SklsSjBEaHJwVU1uRkd0T0xSUmtwYVk5L1E2UjkvaTk5c3BDSE85VGFTOHZkdjY1SE4wNEd4VkptRAo5Q2hBYTBpbFF0L0JLai9PUEJRSmlDQXl5em9NWGNRQXpMZXVVME80b2I5cmdSd3BCMmE4ZFJ5bVptKzVLUXk0CkhLT2ZjR0RBSEQvM2NJNS91SCtFcDYzV3BlTFIzTDZ0eVZGRnFNcEhwWFdEOTlNUGxvSlYwendpTm15OWJ0MmQKWGhTeVM3dXo1Q1ExS3FobDhDcWprOE1zS0tUTHR6R2JhajZDMnJJSjhEOFI2NU0zaTJ4aXhxUm1xK09IQVB2TwpiSm1lQ2JPWk5DK2VQd1cvWDZodVpoUjZhS0lFckZqWnRhR0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjSHhKK1VIcHdzdEVaWFJMV3pXMXdqcXpWb0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNzNxekhCb0hacmRUalhsOGFGNEVZQmtxYTlPbTZSZ28ySEFIM1U3Vk9SQmVSUml0VUlrUm10CkVwTDZxOUt6Si9JSnF2NUNuUDVRSTd1aWtKTmROVnM4MFdXcmtSM0JpcS9WY2tyNXN0R2t5N1VzSzdaYVhMcEcKdDJOWmFIMm9udmw0d0RNcHJzbS9kK2tTMlJ0TVoxUjRCUEpRczUzOXN5SWRIVTc2RzFDcDRrd0dzSy9FVStaawo4bHBBdEtjNUcxY0xybGVLOE8xUnJOUldKRmNYV1pWRWhDMitCNUliNmllWHVuVDJSUytvY2FEc0MxTHROTXU2CjNWaEN6WmRqMG56cVg0cDZDOVBZL3F6UCtSdkxwQ01oVDE1Qml1bzlyMjhMbnpOa3pqQjg3V1lMSXR5djNLQ28KMlRiZ2JSNjhUMHBac09xYzNrU3l5OG1ITTFCTkplUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNjIzOFB3T3FYcEkrcHNRbnRXZFRIRmUzd1hOcG5XUWhHTENST1lQUkhMZW1XcDJ4CjN5LzVnMzhTU0pTZEE0YTZWREp4UnJUaTBVWktXbVBmME9rZmY0dmZiS1FoenZVMmt2TDNiK3VSemRPQnNWU1oKZy9Rb1FHdElwVUxmd1NvL3pqd1VDWWdnTXNzNkRGM0VBTXkzcmxORHVLRy9hNEVjS1FkbXZIVWNwbVp2dVNrTQp1QnlqbjNCZ3dCdy85M0NPZjdoL2hLZXQxcVhpMGR5K3JjbFJSYWpLUjZWMWcvZlRENWFDVmRNOElqWnN2VzdkCm5WNFVza3U3cytRa05TcW9aZkFxbzVQRExDaWt5N2N4bTJvK2d0cXlDZkEvRWV1VE40dHNZc2FrWnF2amh3RDcKem15Wm5nbXptVFF2bmo4RnYxK29ibVlVZW1paUJLeFkyYldoaXdJREFRQUJBb0lCQVFDWS95cjBVSStCVWcwQgpGMnl1eU8wTCtEMWtySG93WElmZG9iRmU3VGtTTG84ZlNHZjFvUm5IeU9hNjRFbUJweWFqM1B3Y2RTVUoxMkl1Cmg4VkY0Sm9scTJLUkdjRVcyK2lSYXZBK2ZacU5aaXhjYjV3c1VwbHQ4OHFNQzMrWjZyajRiN2FkMHljSm0yU24KOEsrVnpYUjVCNGQxRHpoMHhyemtOUGtnOUFLZ1o2YU04QnNVS3RWRkdjVnJmMWYyTUswd0xDMzlYS1lvckp6aApYL1BvL3ZOb1lwLzc1TzF4aE8zUnRGejBYYUhwSGViZm9QNlp5Y2x4UGVib3ZWVUdjdnNQdGppRUZheGVuSlp4CjBQTVJPS3NtWlN5N1Z2UTJDTE5tTGVnMjZmUFJXMHNRQmp5RjR5dlZXSC9oS1h0YyswSUR5TFMvZ2pTNkxtVXkKeFI3RGdBUFJBb0dCQVBMM3BsbVZzN21iYWQ2OHpaNlZscUV2UkZZT09XaC91RFRiNEhTY0xXOTlab0lwVXJwZQpPRWFXZ29mYmM2MVBCbHI3eFBVekFmWURGcndmL2dzN2M2TUhMNGVhdTVtelNvMGhwZHBzODdRcmZBaUFwZUJ3CkVmU1diUEVrNGFuMzViMHZxb20rbG95TVltSEFrRTFYM1owbjhob0NsR040U0pQTVRSc2NrVVMvQW9HQkFQZ08KMUZ6RkE3ZzhFMjJPZWdVRkl3aTYvalI5T3l0L1I4S1Q5K2ZlNG5WVzRndnNWUFdDZC9iTTJ3RU1xUjNPTFFjbwpBUitLdFNnT0dQTjMxc1Y4bXlob3I4ZjhzNURGcE0yYjNLSHVTQU82b1ZQSWVsbSsya3ZYNU1aOTkvUzZBck0yCjRqR0JUMU9lNGFFUEFYVDFzQkpxRnhUdCtLUFhvbFpkNmVDSUdSbzFBb0dBSXp6NXVtcDAyNG1IekU4enZ6bFEKMUdYSGtuZVRxZTFFS1I1dXFscndXQWdtOHQvTmFNdzdlemxmQ3hjdjZzWFlWUi9JekFzdTBLQllEc2JSRUkzNQowbjQ3VFg2S2tOc3BCOWtHZGV4eFdBTXFoUTByZ2FhZlpBcmhHQVJTV2xWaTA1SnpPSEVVNHFPRnJVbkJaQVpIClZRQ3pJMFNXZ3VxeUZBV0FkVnNxVW44Q2dZQTVoejdxOE9vRzdTL1lSYVc0eWxNd3NDVktTUXpTN3FiVzBuZzQKOXpEdjQ2RnpBSEZIcXVWbGdHYitIRkNRVUFPVFdFekNZdW5XaTBad0dJZmZyeUZRd3M2Wmc5cWxKYUV0NmdyRwpKenZlV1ljV3BqVHg0VmhCSktXeS92M2xiTW81ZyszN2F6RFpoTXh4RE1qYXRpd0thVDVISlZWM3NnZTlIZlNpCmxRMjFUUUtCZ1FEaVVYdTV1MDBwUEwrUDZCNVQzcTNFeCtSVWNwTTZsMENsc2d4anRxNkQwNlEvVmxmUFFMTHkKUlJ3Z3l1Vjd1dTlwOEMrckVvNEhhS2NnMmd5a0J0c016WHdmTTZXMkdTb0NMS1Q5aFhKTVFxdmVwZmpjY3o5WQpZUWN4NkVDZjlJKzVyTStQQVoxamV2UzJFZ010aGwxek9CRlNDSWZtWngrL3lnc3Q1YWp5ZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnVtc0c1QmFBVHV0VGZ4WHZ1MUlOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJMk1EQXhOekUyV2hjTk1qWXdOREkxTURBeApOekUyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHJiZncvQTZwZWtqNm14Q2UxWjFNY1Y3ZkJjMm1kWkNFWXNKRTVnOUVjdDZaYW5iSGYKTC9tRGZ4SklsSjBEaHJwVU1uRkd0T0xSUmtwYVk5L1E2UjkvaTk5c3BDSE85VGFTOHZkdjY1SE4wNEd4VkptRAo5Q2hBYTBpbFF0L0JLai9PUEJRSmlDQXl5em9NWGNRQXpMZXVVME80b2I5cmdSd3BCMmE4ZFJ5bVptKzVLUXk0CkhLT2ZjR0RBSEQvM2NJNS91SCtFcDYzV3BlTFIzTDZ0eVZGRnFNcEhwWFdEOTlNUGxvSlYwendpTm15OWJ0MmQKWGhTeVM3dXo1Q1ExS3FobDhDcWprOE1zS0tUTHR6R2JhajZDMnJJSjhEOFI2NU0zaTJ4aXhxUm1xK09IQVB2TwpiSm1lQ2JPWk5DK2VQd1cvWDZodVpoUjZhS0lFckZqWnRhR0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjSHhKK1VIcHdzdEVaWFJMV3pXMXdqcXpWb0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNzNxekhCb0hacmRUalhsOGFGNEVZQmtxYTlPbTZSZ28ySEFIM1U3Vk9SQmVSUml0VUlrUm10CkVwTDZxOUt6Si9JSnF2NUNuUDVRSTd1aWtKTmROVnM4MFdXcmtSM0JpcS9WY2tyNXN0R2t5N1VzSzdaYVhMcEcKdDJOWmFIMm9udmw0d0RNcHJzbS9kK2tTMlJ0TVoxUjRCUEpRczUzOXN5SWRIVTc2RzFDcDRrd0dzSy9FVStaawo4bHBBdEtjNUcxY0xybGVLOE8xUnJOUldKRmNYV1pWRWhDMitCNUliNmllWHVuVDJSUytvY2FEc0MxTHROTXU2CjNWaEN6WmRqMG56cVg0cDZDOVBZL3F6UCtSdkxwQ01oVDE1Qml1bzlyMjhMbnpOa3pqQjg3V1lMSXR5djNLQ28KMlRiZ2JSNjhUMHBac09xYzNrU3l5OG1ITTFCTkplUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRUS9LMytIOFBGamtDWWFHcWQ1aWtOekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJMk1EQXhOekUyV2hjTk1qWXdOREkxTURBeApOekUyV2pBdk1TMHdLd1lEVlFRRERDUXFMbWh2YldVdFkyeDFjM1JsY2k1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREJKN3dNSzE1emhXbTAKNk5QS2ZHTXowQlNaQUw5YlA4Zi9nOTVoKzRIenBQcmpHWFJFdjFIeHh4Yjg3YWZSNk9Qbi9xcFMzeU1kVTA4WAphYmxVVFRZQ3E0enRKM1JTT3N2d3FJbEQrZFN4Q1FSSWdWempIcTFmUVZsem1pUENKaVFGTkJrZzZkbjZaUXBpCitQQXowVE9LSlpvOFFkV2lSZ0lWc2NscWVlQzFBOExyZGNVZFlNcGpzbUxyMWdpclJDa2RNeHpvMXNQVktJMzgKR2J4cXNWdG1TZUF1UTE2dlc3a09QSmZUNU9Tams5OXNrMXJTMDZZMXBiRGlsMmhOOCszeFM3UmUwRGdpdFNQWAo2TmhveWswS0tLeGI3UEMvT3k0ZkQ5cElDK0xuU0Vsb0pVUXVxc2cralhsdmFuMmpLZmE4WTEzMGJ5Wjg2NDZCCmkwUHhuU3FEQWdNQkFBR2pnWkl3Z1k4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGSEI4U2ZsQgo2Y0xMUkdWMFMxczF0Y0k2czFhQk1DOEdBMVVkRVFRb01DYUNKQ291YUc5dFpTMWpiSFZ6ZEdWeUxtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUdJZXcxQjd2S25zZDMwRkwKT2xQYUtlRzEwWjB0L3prcUhHNGhCYi9mUG9sQ0ljNGlFTkV5SlpMa3NXbUdRWXVxeWlJYkdDREFqMi9IbW41NQowUDdZV0hOMUhXbzJYT3FlcWNMZXVtd09wR2haSzA3OTQyVUxJdkZWQ1lnOEZobzgwSnlXWThYWnRxayswRU15CkNxUG5KVzV4VWIzbnlHOUhpWFlLazZKSWxjOWxKemtTVXVTdlRkZmNxZ0I1NHRONXpUcTllUEtUd1pEbFE1RksKeDUrUVB5Q2l6a0NPYUJocTBVMkNJb2FrcTVLM1BQSmQrTFQ0VlNLNENScE0vRm9nSFRFeStSc283azBvemdsdgp5OTd6SzNWU2ZVTEFxSnZZd0l2VjI3b0owbEx4M2Q1QjYzd3lERjdncXZwYndTb0RtbU40ZThTSE1vdCs0TjFNCjZMTDRTUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1NlOERDdGVjNFZwdE9qVHlueGpNOUFVbVFDL1d6L0gvNFBlWWZ1Qjg2VDY0eGwwClJMOVI4Y2NXL08ybjBlamo1LzZxVXQ4akhWTlBGMm01VkUwMkFxdU03U2QwVWpyTDhLaUpRL25Vc1FrRVNJRmMKNHg2dFgwRlpjNW9qd2lZa0JUUVpJT25aK21VS1l2andNOUV6aWlXYVBFSFZva1lDRmJISmFubmd0UVBDNjNYRgpIV0RLWTdKaTY5WUlxMFFwSFRNYzZOYkQxU2lOL0JtOGFyRmJaa25nTGtOZXIxdTVEanlYMCtUa281UGZiSk5hCjB0T21OYVd3NHBkb1RmUHQ4VXUwWHRBNElyVWoxK2pZYU1wTkNpaXNXK3p3dnpzdUh3L2FTQXZpNTBoSmFDVkUKTHFySVBvMTViMnA5b3luMnZHTmQ5RzhtZk91T2dZdEQ4WjBxZ3dJREFRQUJBb0lCQVFDUmVXcXd3NjBrVmxQUgoxQlZIQ0wzeVZRSmVaZWk1UWVWUWRUSDFHK2E0NlFXb0t4Q2RnbmFtSVNzWUhhbnFkM3ZHeTgvZUVINnk1SDdLCkJHOTNwWnRMRVlkWFNnTGF0N3ZIcWplUHdjYkYreU9GdENDUVVoZURpWVZrZ3EveDFxWUVZVU9YdldqVnBHbloKTnVJNk5KS2J0a3hlbTdyWnQ5NTBGbTI3U3NYSnJoZGx2N1hkOWFxZXFvaU9SUWJpcjYwUW4wOWM1bjRsakpHaQoySHY3K25VTHpZdUR1UFJPUUREcTRpNGxZVTA2d2lSNUNOOVJWUGNQZGxhcXpnN1FOdE0xZVFyMmcyaGdyRlgrCmhaRWoyeFpnNXJmWm55TFJObXNRclB0bmZMMVRKMFJhVmRQQ1JvdXAwWFk3M3AxRm5OZDBzaDhFL2s0d21SUTAKYkZadUlHdlJBb0dCQU5iaVNkQnlXQ1BteW5wTnlRcEFrczRnVmNZamRWOW1sVDRvQlhWajB4QVlFenc3WXRLQwpJVFFSOWxNSkswcDFvak5nYlFGSUNwbkxuYzF0bXlicHUydDN6a0V5ak03SjROd2todVUxUmluNUgzRUwrZ2w5CkxjZC9rVTM0SGo2L0gzbGZwME1WbW1YRGRpWjZCamJkQmtHb3ZUdG15WW1aQXFaT05SY1lFVHhiQW9HQkFPWWQKR2xMYlFweVBLcTcvR2ovckgzbnR4bkRQc1NKbHRwUTV5U0dhbVJuZktaUkdGalpJT2hVN1UzNStiMEdGY3RYUgppNzBZZzk1NXA5Z3FUU1FIZzV1Y3FJZ2s2WUpyQm1ETWczRGd5bHNNc2NpWExpQW9QajdzMWNUV1hJT0tJbVR4Cno0ME9DVE9qeGZhYkx4RkkxcVZtZ0FxclBwcGV3WEJaTjBldi9rTDVBb0dBRnhBdWovclZ6dlNrWXNBYWhja3MKZUljcjdabzhyTUtiM2hINWxBSGswMk5pSFNMYWxuRjFFdHVpcm9MYmJLQjNpa0FkTXZnQ2UwTkphcFVMQkFBdQpKM2l5WUhrR2QrTmZDUUc2b0xzNURxUTRaYSs5Wkd0VkVJWjJtQUc3YlV5aUdpclVEdlV3bng5OWZOKzM3d2VGCjltSWYvVklvNjJYS3pRS3ozQWl2UU9VQ2dZRUFsR2FtYUZNQkJXaUxGV3B0YWxWZTZrbysxTmdNbTJ0UE1RNkgKT01XMEFPeGJxMFQ3NUN2MlVXVCtOckNoWFhjTGxQdGJqQ3E0T0l6cWdzemRET1JQcXRhQUZiVUFadHhRczdLUQovZ1hxV29lNFMrMjdrSCtEalI4OXlZQ1pEemZSY0pwRnlPa0paQ1UxY1JHcGJCTTJZbHJWTG93N2htQ2ZqYTNyCnFhN0ZZamtDZ1lCSkRydlJta0ZmaHJkUnRGMFNXUzZSUmdtU09kMlY3NUxXQXZBdFRxeDVSUk5sSGhYRy9udEMKdlRmU3pvOW1YOWt1K2M4cEt4T2orM0lIVkl2Y1B5Z09YMnowR1N4MTRWQkJWQTExMWg4bzZhNXVNaXhQNTJPWgpzOG16Z3ZoOThicStOeHRUeDF5YVQ1VGNGL2grTzZQa25RSjFxZGRkT3J1b1U3ZEVNallBRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.10.250
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
